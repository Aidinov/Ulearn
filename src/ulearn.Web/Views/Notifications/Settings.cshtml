@using Database.Models
@model uLearn.Web.Controllers.NotificationSettingsViewModel

@{
	ViewBag.Title = "Настройки уведомлений";
}

<div class="container">
    <h2>Настройки уведомлений</h2>
    <div class="help-text">для курса «@Model.Course.Title»</div>

    @if (Model.MailTransport == null && Model.User.EmailConfirmed)
    {
        <h3>
            Электронная почта
        </h3>
        if (string.IsNullOrEmpty(Model.User.Email))
        {
            <p>
                Чтобы получать уведомления о новых комментариях, ответах и других событиях
                к&nbsp;себе на&nbsp;почту, укажите свой адрес @Html.ActionLink("в профиле", "Manage", "Account", new {}, new {}).
            </p>
        }
        else
        {
            <p>
                Нажмите эту кнопку, чтобы получать уведомления на&nbsp;почту <b>@Model.User.Email</b>.
            </p>
            <p>
                @using (Html.BeginForm("CreateMailTransport", "Notifications", FormMethod.Post))
                {
                    <button class="ph-btn ph-btn-blue btn-block">Включить</button>
                }
            </p>
        }
        <p>
            Вы сможете настроить, какие именно новости получать на&nbsp;почту. Обещаем не&nbsp;присылать лишнего.
        </p>
    }

    @if (Model.TelegramTransport == null)
    {
        <h3>
            Телеграм
        </h3>
        <p>
            Вы можете получать уведомления себе в телеграм. Для этого напишите нашему боту <a href="https://t.me/ulearn_bot">@@ulearn_bot</a>.
        </p>
    }

    @{
        var transports = new List<NotificationTransport>();
        if (Model.MailTransport != null)
        {
            transports.Add(Model.MailTransport);
        }
        if (Model.TelegramTransport != null)
        {
            transports.Add(Model.TelegramTransport);
        }
    }

    @if (transports.Count > 0)
    {
        using (Html.BeginForm("SaveSettings", "Notifications", new { courseId = Model.Course.Id }, FormMethod.Post))
        {
            <table class="notification-settings__table">
                <thead>
                <tr>
                    <th></th>
                    @if (Model.MailTransport != null)
                    {
                        <th>
                            Эл. почта <br/>
                            @Html.ActionLink(Model.MailTransport.IsEnabled ? "выключить" : "включить", "EnableNotificationTransport", "Notifications", new { transportId = Model.MailTransport.Id, enable = ! Model.MailTransport.IsEnabled, courseId = Model.Course.Id }, new { @class = "btn btn-xs " + (Model.MailTransport.IsEnabled ? "btn-danger" : "btn-success") })
                        </th>
                    }
                    @if (Model.TelegramTransport != null)
                    {
                        <th>
                            Телеграм <br/>
                            @Html.ActionLink(Model.TelegramTransport.IsEnabled ? "выключить" : "включить", "EnableNotificationTransport", "Notifications", new { transportId = Model.TelegramTransport.Id, enable = !Model.TelegramTransport.IsEnabled, courseId = Model.Course.Id }, new { @class = "btn btn-xs " + (Model.TelegramTransport.IsEnabled ? "btn-danger" : "btn-success") })
                        </th>
                    }
                </tr>
                </thead>
                <tbody>
                @foreach (var notificationType in Model.NotificationTypes)
                {
                    <tr>
                        <td>
                            @notificationType.GetGroupName()
                        </td>

                        @foreach (var transport in transports)
                        {
                            <td class="text-center">
                                @if (transport.IsEnabled)
                                {
                                    var settings = Model.TransportsSettings[Tuple.Create(transport.Id, notificationType)];
                                    var isEnabled = settings != null ? settings.IsEnabled : notificationType.IsEnabledByDefault();
                                    var checkBoxLabel = "notifications__" + transport.Id + "__" + (int)notificationType;

                                    <div class="checkbox checkbox-default">
                                        @Html.CheckBox(checkBoxLabel, isEnabled)
                                        <label for="@checkBoxLabel">&nbsp;</label>
                                    </div>
                                }
                            </td>
                        }
                    </tr>
                }
                </tbody>
            </table>

            <button type="submit" class="btn btn-success btn-lg">Сохранить настройки</button>
        }
    }
</div>