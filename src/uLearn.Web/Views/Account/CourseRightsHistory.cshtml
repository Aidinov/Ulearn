@using System.Globalization
@using uLearn.Web.Controllers
@using uLearn.Web.Extensions
@model UserCourseHistoryModel

@{
	ViewBag.Title = "User Course Stats";
}
<div class="container">
	<h2 class="space-after">
		@Html.ActionLink(Model.User.VisibleName, "Profile", "Account", new { userId = Model.User.Id }, new { title = Model.User.UserName })
		— "@Model.Course.Title". Роли и права.
	</h2>

	<table class="table" >
		<tr>
			<th style="text-align: center !important">Роль или права</th>
			<th style="text-align: center !important">Выданы или отозваны</th>
			<th style="text-align: center !important">Выданы пользователем</th>
			<th style="text-align: center !important">Дата и время</th>
			<th style="text-align: center !important">Комментарий</th>
		</tr>
		@if (Model.UserGrantsHistory.ContainsKey(Model.Course.Id))
		{
			foreach (var grant in Model.UserGrantsHistory[Model.Course.Id])
			{
				var dateCulture = CultureInfo.CreateSpecificCulture("en-US");
				var d = grant.GrantTimeUtc.ToString("G", dateCulture ) + " UTC";
				var timestamp = grant.GrantTimeUtc == DateTime.MinValue ? "Неизвестно" : d;
				var grantedBy = string.IsNullOrEmpty(grant.GrantedBy) ? "Неизвестно" : grant.GrantedBy;
				var comment = string.IsNullOrEmpty(grant.Comment) ? "Без комментария" : grant.Comment;

				var bgColor = grant.GrantType == typeof(RoleGrantModel) ? "#fffcdd" : "white";
				var enabled = grant.IsEnabled ? "Выданы" : "Отозваны";
				<tr style="text-align: center" bgcolor=@bgColor>
					<td style="text-align: left;"> @grant.Grant</td>
					<td style="text-align: center;">@enabled</td>
					<td style="text-align: left;">@grantedBy </td>
					<td class="grantTime" style="text-align: center; white-space: pre-wrap;">@timestamp</td>
					<td style="table-layout: fixed; white-space: pre-wrap; word-wrap: break-word; word-break: break-word ;text-align: left; width:30%">@comment</td>
				</tr>
			}
		}

	</table>
	
	<script>
	$(document).ready(function($) {
			   
		var allTimes = document.getElementsByClassName("grantTime");
		for (var time in allTimes){
			var localDate = new Date(allTimes[time].innerHTML);
			if (!isNaN(localDate.getTime())){
				allTimes[time].innerHTML = localDate.toLocaleString().replace(',','\r\n');
			}
			
		} 
		})
	</script>

</div>

