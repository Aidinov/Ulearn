@using uLearn
@using uLearn.Web.Controllers

@model SlideCommentsModel

@helper Comment(Comment comment)
{
	<div class="comment @(comment.IsTopLevel() ? "" : "is-reply") media">
		<a class="pull-left" href="#">
			<img class="comment__author-avatar media-object" src="//placehold.it/48x48" alt="">
		</a>
		<div class="media-body">
			<div class="comment__info media-heading">
				<div class="comment__author-name">
					@comment.Author.FirstName @comment.Author.LastName
				</div>
				<div class="comment__publish-time">
					@comment.PublishTime
				</div>
			</div>
			<div class="comment__text">
				@comment.Text
			</div>
			<div class="media-footer">
				@{
					var likesCount = Model.CommentsLikesCounts.Get(comment.Id, 0);
				}
				@if (likesCount > 0)
				{
					<div class="comment__likes-count">
						@likesCount
					</div>
				}
			</div>
		</div>
	</div>
}

@helper ReplyForm(Comment comment)
{
	<div class="reply-form @(comment != null ? "is-reply" : "") media">
		<form>
			<div class="pull-left">
				<img src="//placehold.it/24x24"/>
			</div>
			<div class="media-body">
				<input type="text" name="comment-text" placeholder="Оставьте свой комментарий" />
			</div>
		</form>
	</div>
}

<div class="comments">
	@if (!Model.TopLevelComments.Any())
	{
		<div class="no-comments">Комментариев пока нет</div>
	}
	else
	{
		<h3>Комментарии</h3>
	}
	@foreach (var topLevelComment in @Model.TopLevelComments)
	{
		@Comment(topLevelComment)

		var replies = Model.CommentsByParent.Get(topLevelComment.Id, new List<Comment>());
		foreach (var replyComment in replies)
		{
			@Comment(replyComment)
		}

		@ReplyForm(topLevelComment)
	}
	@ReplyForm(null)
</div>