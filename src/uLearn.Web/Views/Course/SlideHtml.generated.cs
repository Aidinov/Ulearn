#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace uLearn.Web.Views.Course
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Database.Models;
    using HtmlHelper = System.Web.Mvc.HtmlHelper;
    using Ulearn.Common;
    using Ulearn.Common.Api;
    using Ulearn.Common.Extensions;
    using Ulearn.Core;
    using Ulearn.Core.Courses.Slides;
    using Ulearn.Core.Courses.Slides.Blocks;
    using Ulearn.Core.Courses.Slides.Exercises;
    using Ulearn.Core.Courses.Slides.Exercises.Blocks;
    using Ulearn.Core.Courses.Slides.Quizzes;
    using Ulearn.Core.Courses.Slides.Quizzes.Blocks;
    using Ulearn.VideoAnnotations.Api.Models.Parameters.Annotations;
    using Ulearn.VideoAnnotations.Api.Models.Responses.Annotations;
    using uLearn.Web;
    using uLearn.Web.Clients;
    using uLearn.Web.Controllers;
    using uLearn.Web.Extensions;
    using uLearn.Web.Models;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    public class SlideHtml : System.Web.WebPages.HelperPage
    {
 

	private static bool IsBlockCorrect(QuizBlockData model, AbstractQuestionBlock block)
	{
		int blockScore;
		var isBlockCorrect = model.QuizModel != null && model.QuizModel.UserScores != null &&
							model.QuizModel.UserScores.TryGetValue(block.Id, out blockScore) && blockScore == block.MaxScore;
		return isBlockCorrect;
	}


#line default
#line hidden
public static System.Web.WebPages.HelperResult Slide(BlockRenderContext context, HtmlHelper Html, int currentScore = 0)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"slide\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<h1>\r\n\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"slide__title\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t");

WriteTo(__razor_helper_writer, context.Slide.Title);

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t</span>\r\n\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"score\"");

WriteLiteralTo(__razor_helper_writer, ">");

  WriteTo(__razor_helper_writer, ShowScoreWithWords(currentScore, context.Slide.MaxScore));

WriteLiteralTo(__razor_helper_writer, "</span>\r\n\t\t</h1>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t");

WriteTo(__razor_helper_writer, Blocks(context, Html));

WriteLiteralTo(__razor_helper_writer, "\r\n\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Blocks(BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var shouldSpoilerBlocksBeforeExercise = context.ManualChecking != null && context.Slide.Blocks.OfType<AbstractExerciseBlock>().Any();
	var ranges = context.Slide.GetBlockRangesWithSameVisibility(shouldSpoilerBlocksBeforeExercise).ToList();
	var countHiddenBlocks = ranges.Count(b => b[0].Hide);
	var rangesInSpoilerCount = 0;
	var firstHiddenBlock = true;
	if (shouldSpoilerBlocksBeforeExercise)
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<button");

WriteLiteralTo(__razor_helper_writer, " id=\"exerciseTaskSpoilerButton\"");

WriteLiteralTo(__razor_helper_writer, " class=\"btn\"");

WriteLiteralTo(__razor_helper_writer, " type=\"button\"");

WriteLiteralTo(__razor_helper_writer, " data-toggle=\"collapse\"");

WriteLiteralTo(__razor_helper_writer, " data-target=\"#exerciseTaskSpoiler\"");

WriteLiteralTo(__razor_helper_writer, " aria-expanded=\"false\"");

WriteLiteralTo(__razor_helper_writer, " aria-controls=\"exerciseTaskSpoiler\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\tПоказать формулировку\r\n\t\t</button>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t<div");

WriteLiteralTo(__razor_helper_writer, " id=\"exerciseTaskSpoiler\"");

WriteLiteralTo(__razor_helper_writer, " class=\"collapse\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

			
             foreach (var blockRange in ranges.TakeWhile(blockRange => !(blockRange[0] is AbstractExerciseBlock)))
			{
				rangesInSpoilerCount++;
				
WriteTo(__razor_helper_writer, Range(blockRange, countHiddenBlocks, firstHiddenBlock, context, Html));

                                                                                      
				if (firstHiddenBlock && blockRange[0].Hide)
				{
					firstHiddenBlock = false;
				}
			}

WriteLiteralTo(__razor_helper_writer, "\t\t</div>\r\n");

	}
	foreach (var blockRange in ranges.Skip(rangesInSpoilerCount))
	{
		
WriteTo(__razor_helper_writer, Range(blockRange, countHiddenBlocks, firstHiddenBlock, context, Html));

                                                                              
		if (firstHiddenBlock && blockRange[0].Hide)
		{
			firstHiddenBlock = false;
		}
	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Range(SlideBlock[] blockRange, int countHiddenBlocks, bool firstHiddenBlock, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	if (!blockRange[0].Hide)
	{
		foreach (var block in blockRange)
		{
			
WriteTo(__razor_helper_writer, Block((dynamic)block, context, Html));

                                                 
		}
	}
	else if (context.RevealHidden)
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"revealed\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

			
             if (firstHiddenBlock)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"revealed__description\"");

WriteLiteralTo(__razor_helper_writer, ">Студенты не&nbsp;видят ");

                                             WriteTo(__razor_helper_writer,  countHiddenBlocks > 1 ? "синие блоки" : "этот блок");

WriteLiteralTo(__razor_helper_writer, "</div>\r\n");

			}

WriteLiteralTo(__razor_helper_writer, "\t\t\t");

             foreach (var block in blockRange)
			{
				
WriteTo(__razor_helper_writer, Block((dynamic)block, context, Html));

                                                     
			}

WriteLiteralTo(__razor_helper_writer, "\t\t</div>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(AbstractQuestionBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var mark = "";
	var style = "";
	var blockScore = -1;
	QuizBlockData model = context.GetBlockData(block);
	if (model.QuizState.Status == QuizStatus.Sent)
	{
		if (model.QuizModel.UserScores != null)
		{
			model.QuizModel.UserScores.TryGetValue(block.Id, out blockScore);
		}

		var isBlockCorrect = IsBlockCorrect(model, block);
		mark = "glyphicon " + (isBlockCorrect ? "glyphicon-ok" : "glyphicon-remove");
		style = "color: " + (isBlockCorrect ? "green" : "red");
	}

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block__is-question\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<h4");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 4106), Tuple.Create("\"", 4213)
, Tuple.Create(Tuple.Create("", 4114), Tuple.Create("quiz-block__is-question__title", 4114), true)
, Tuple.Create(Tuple.Create(" ", 4144), Tuple.Create<System.Object, System.Int32>( string.IsNullOrEmpty(mark) || model.DebugView ? "" : "with-mark"
, 4145), false)
);

WriteLiteralTo(__razor_helper_writer, ">\r\n");

			
             if (!model.DebugView)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<i");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 4256), Tuple.Create("\"", 4269)
, Tuple.Create(Tuple.Create("", 4264), Tuple.Create<System.Object, System.Int32>(mark
, 4264), false)
);

WriteAttributeTo(__razor_helper_writer, "style", Tuple.Create(" style=\"", 4270), Tuple.Create("\"", 4284)
, Tuple.Create(Tuple.Create("", 4278), Tuple.Create<System.Object, System.Int32>(style
, 4278), false)
);

WriteLiteralTo(__razor_helper_writer, "></i>\r\n");

			}

WriteLiteralTo(__razor_helper_writer, "\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block__text\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t");

WriteTo(__razor_helper_writer, block.QuestionIndex);

WriteLiteralTo(__razor_helper_writer, ". ");

        WriteTo(__razor_helper_writer, block.Text.RenderTex().ToLegacyHtmlString());

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t</span>\r\n\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block__score\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

				
                 if (blockScore >= 0)
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<nobr>");

WriteTo(__razor_helper_writer, blockScore);

WriteLiteralTo(__razor_helper_writer, " из ");

           WriteTo(__razor_helper_writer, block.MaxScore);

WriteLiteralTo(__razor_helper_writer, " балл");

                                WriteTo(__razor_helper_writer,  block.MaxScore == 1 ? "а" : "ов");

WriteLiteralTo(__razor_helper_writer, "</nobr>\r\n");

				}
				else
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<nobr>");

WriteTo(__razor_helper_writer, block.MaxScore.PluralizeInRussian(RussianPluralizationOptions.Score));

WriteLiteralTo(__razor_helper_writer, "</nobr>\r\n");

				}

WriteLiteralTo(__razor_helper_writer, "\t\t\t</span>\r\n\t\t</h4>\r\n\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t");

WriteTo(__razor_helper_writer, QuizBlock((dynamic)block, context));

WriteLiteralTo(__razor_helper_writer, "\r\n\r\n");

		
         if (context.ManualChecking != null)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<h4>Оцените от 0 до ");

  WriteTo(__razor_helper_writer, block.MaxScore);

WriteLiteralTo(__razor_helper_writer, "</h4>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t<div>\r\n\t\t\t\t<input");

WriteLiteralTo(__razor_helper_writer, " type=\"number\"");

WriteLiteralTo(__razor_helper_writer, " class=\"form-control\"");

WriteLiteralTo(__razor_helper_writer, " min=\"0\"");

WriteAttributeTo(__razor_helper_writer, "max", Tuple.Create(" max=\"", 4917), Tuple.Create("\"", 4938)
, Tuple.Create(Tuple.Create("", 4923), Tuple.Create<System.Object, System.Int32>(block.MaxScore
, 4923), false)
);

WriteAttributeTo(__razor_helper_writer, "name", Tuple.Create(" name=\"", 4939), Tuple.Create("\"", 4971)
, Tuple.Create(Tuple.Create("", 4946), Tuple.Create("quiz__score__", 4946), true)
                            , Tuple.Create(Tuple.Create("", 4959), Tuple.Create<System.Object, System.Int32>( block.Id
, 4959), false)
);

WriteAttributeTo(__razor_helper_writer, "value", Tuple.Create("\r\n\t\t\t\t\t\tvalue=\"", 4972), Tuple.Create("\"", 5083)
, Tuple.Create(Tuple.Create("", 4987), Tuple.Create<System.Object, System.Int32>( context.ManualChecking.IsChecked ? context.UserScores.GetOrDefault(block.Id).ToString() : ""
, 4987), false)
);

WriteLiteralTo(__razor_helper_writer, "/>\r\n\t\t\t</div>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult ShowScore(int currentScore, int maxScore)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
  
WriteTo(__razor_helper_writer,  maxScore == 0 ? "" : string.Format("{0}/{1}", currentScore, maxScore));

                                                                            
});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult ShowScoreWithWords(int currentScore, int maxScore)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
  
WriteTo(__razor_helper_writer,  maxScore == 0 ? "" : string.Format("{0} из {1}", currentScore.PluralizeInRussian(RussianPluralizationOptions.Score), maxScore));

                                                                                                                                     
});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(MarkdownBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
  
WriteTo(__razor_helper_writer, MvcHtmlString.Create(block.RenderMarkdown(context.Course.Id, context.Slide.Id, context.BaseUrl)));

                                                                                                    
});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(CodeBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	if (block.Hide)
	{
		
WriteTo(__razor_helper_writer, ExpandableCodeBlock(block, context, Html));

                                                  
	}
	else
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<textarea");

WriteLiteralTo(__razor_helper_writer, " class=\"code code-sample\"");

WriteLiteralTo(__razor_helper_writer, " data-lang=\"");

                         WriteTo(__razor_helper_writer,  block.Language.GetName());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">");

                                                      WriteTo(__razor_helper_writer, block.Code);

WriteLiteralTo(__razor_helper_writer, "</textarea>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult ExpandableCodeBlock(CodeBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var linesCount = block.Code.SplitToLines().Length;
	var linesCountToShow = linesCount <= 20 ? linesCount : 5;
	var visibleLines = block.Code.SplitToLinesWithEoln().Take(linesCountToShow).Join("");

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 6210), Tuple.Create("\"", 6294)
, Tuple.Create(Tuple.Create("", 6218), Tuple.Create("expandable-code", 6218), true)
, Tuple.Create(Tuple.Create(" ", 6233), Tuple.Create<System.Object, System.Int32>( linesCount > linesCountToShow ? "collapsed" : "expanded"
, 6234), false)
);

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<textarea");

WriteLiteralTo(__razor_helper_writer, " class=\"code code-sample\"");

WriteLiteralTo(__razor_helper_writer, " data-lang=\"");

                        WriteTo(__razor_helper_writer, block.Language.GetName());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-code=\"");

                                                              WriteTo(__razor_helper_writer, block.Code);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">");

                                                                           WriteTo(__razor_helper_writer, visibleLines);

WriteLiteralTo(__razor_helper_writer, "</textarea>\r\n");

		
         if (linesCount > linesCountToShow)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"expandable-code__button-wrapper\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t<button");

WriteLiteralTo(__razor_helper_writer, " class=\"expandable-code__button\"");

WriteLiteralTo(__razor_helper_writer, ">Показать код полностью</button>\r\n\t\t\t</div>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(TexBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	foreach (var texLine in block.TexLines)
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"tex\"");

WriteLiteralTo(__razor_helper_writer, ">\\displaystyle ");

         WriteTo(__razor_helper_writer, texLine.Trim());

WriteLiteralTo(__razor_helper_writer, "</div>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(YoutubeBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"video-container\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"youtube-video\"");

WriteLiteralTo(__razor_helper_writer, " data-width=\"864\"");

WriteLiteralTo(__razor_helper_writer, " data-height=\"480\"");

WriteLiteralTo(__razor_helper_writer, " data-video-id=\"");

                                                       WriteTo(__razor_helper_writer, block.VideoId);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-autoplay=\"");

                                                                                      WriteTo(__razor_helper_writer, context.Autoplay.ToString().ToLower());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, "></div>\r\n\t</div>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t<div>\r\n\t\t<a");

WriteLiteralTo(__razor_helper_writer, " href=\"javascript://\"");

WriteLiteralTo(__razor_helper_writer, " class=\"popover-trigger pull-right\"");

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\ttitle=\"Как ускорить видео?\"");

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\tdata-content=\"Выберите скорость в иконке с шестеренкой или используйте горяч" +
"ие клавиши Shift+> и Shift+<\"");

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\tdata-placement=\"bottom\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"glyphicon glyphicon-question-sign\"");

WriteLiteralTo(__razor_helper_writer, "></span>\r\n\t\t\tУскорить видео?\r\n\t\t</a>\r\n\t</div>\r\n");


	if (!string.IsNullOrEmpty(context.Course.Settings.VideoAnnotationsGoogleDoc))
	{
		var client = UlearnVideoAnnotationsClient.Instance;
		if (client != null)
		{
			try
			{
				var annotationsResponse = client.GetAnnotationsAsync(new AnnotationsParameters
				{
					GoogleDocId = context.Course.Settings.VideoAnnotationsGoogleDoc,
					VideoId = block.VideoId
				}).GetAwaiter().GetResult();

				
WriteTo(__razor_helper_writer, ShowVideoAnnotations(annotationsResponse.Annotation, context, Html));

                                                                                    
			}
			catch (ApiClientException e)
			{
				/* Annotations not found. It's ok */
				
WriteTo(__razor_helper_writer, SuggestAnnotations(context, Html));

                                                  
			}
		}
	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult ShowVideoAnnotations(Annotation annotation, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<h2>\r\n\t\tСодержание видео\r\n\t</h2>\r\n");

	
WriteTo(__razor_helper_writer, annotation.Text);

                    

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"video-annotations\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

		
         foreach (var fragment in annotation.Fragments)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"fragment\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"offset\"");

WriteLiteralTo(__razor_helper_writer, ">");

       WriteTo(__razor_helper_writer, fragment.Offset.ToString(@"mm\:ss"));

WriteLiteralTo(__razor_helper_writer, "</span> — ");

                                                     WriteTo(__razor_helper_writer, fragment.Text);

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t</div>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t</div>\r\n");


	var googleDocLink = context.Course.Settings.VideoAnnotationsGoogleDoc;
	if (!string.IsNullOrEmpty(googleDocLink))
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"suggest-video-annotations\"");

WriteLiteralTo(__razor_helper_writer, ">Ошибка в содержании? <a");

WriteAttributeTo(__razor_helper_writer, "href", Tuple.Create(" href=\"", 8637), Tuple.Create("\"", 8693)
, Tuple.Create(Tuple.Create("", 8644), Tuple.Create("https://docs.google.com/document/d/", 8644), true)
                                , Tuple.Create(Tuple.Create("", 8679), Tuple.Create<System.Object, System.Int32>(googleDocLink
, 8679), false)
);

WriteLiteralTo(__razor_helper_writer, " target=\"_blank\"");

WriteLiteralTo(__razor_helper_writer, ">Предложите исправление</a><span");

WriteLiteralTo(__razor_helper_writer, " class=\"link-text\"");

WriteLiteralTo(__razor_helper_writer, ">!</span></div>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult SuggestAnnotations(BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<h2>\r\n\t\tСодержание видео\r\n\t</h2>\r\n");

	var googleDocLink = context.Course.Settings.VideoAnnotationsGoogleDoc;
	if (!string.IsNullOrEmpty(googleDocLink))
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"suggest-video-annotations\"");

WriteLiteralTo(__razor_helper_writer, ">Помогите написать <a");

WriteAttributeTo(__razor_helper_writer, "href", Tuple.Create(" href=\"", 9079), Tuple.Create("\"", 9135)
, Tuple.Create(Tuple.Create("", 9086), Tuple.Create("https://docs.google.com/document/d/", 9086), true)
                             , Tuple.Create(Tuple.Create("", 9121), Tuple.Create<System.Object, System.Int32>(googleDocLink
, 9121), false)
);

WriteLiteralTo(__razor_helper_writer, " target=\"_blank\"");

WriteLiteralTo(__razor_helper_writer, ">текстовое содержание</a> этого видео.</div>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(ImageGalleryBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"flexslider\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<ul");

WriteLiteralTo(__razor_helper_writer, " class=\"slides\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

			
             foreach (var imageUrl in block.ImageUrls)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<li>\r\n\t\t\t\t\t<img");

WriteAttributeTo(__razor_helper_writer, "src", Tuple.Create(" src=\"", 9417), Tuple.Create("\"", 9432)
, Tuple.Create(Tuple.Create("", 9423), Tuple.Create<System.Object, System.Int32>(imageUrl
, 9423), false)
);

WriteAttributeTo(__razor_helper_writer, "alt", Tuple.Create(" alt=\"", 9433), Tuple.Create("\"", 9448)
, Tuple.Create(Tuple.Create("", 9439), Tuple.Create<System.Object, System.Int32>(imageUrl
, 9439), false)
);

WriteLiteralTo(__razor_helper_writer, "/>\r\n\t\t\t\t</li>\r\n");

			}

WriteLiteralTo(__razor_helper_writer, "\t\t</ul>\r\n\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(HtmlBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
  
WriteTo(__razor_helper_writer, new HtmlString(block.Content));

                                   
});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(SpoilerBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"spoiler-block\"");

WriteLiteralTo(__razor_helper_writer, " data-hide-quiz-button=\"");

                        WriteTo(__razor_helper_writer, block.HideQuizButton.ToString().ToLower());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"spoiler-block__button\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t<button");

WriteLiteralTo(__razor_helper_writer, " class=\"btn btn-success\"");

WriteLiteralTo(__razor_helper_writer, ">");

              WriteTo(__razor_helper_writer, block.Text);

WriteLiteralTo(__razor_helper_writer, "</button>\r\n\t\t</div>\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"spoiler-block__content\"");

WriteLiteralTo(__razor_helper_writer, " style=\"display: none\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

			
             foreach (var innerBlock in block.Blocks)
			{
				
WriteTo(__razor_helper_writer, Block((dynamic)innerBlock, context, Html));

                                                          
			}

WriteLiteralTo(__razor_helper_writer, "\t\t</div>\r\n\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult CodeTextArea(string initialCode, string langId, string runSolutionUrl)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<textarea");

WriteLiteralTo(__razor_helper_writer, " class=\"code code-exercise\"");

WriteLiteralTo(__razor_helper_writer, " data-lang=\"");

                      WriteTo(__razor_helper_writer, langId);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">");

                               WriteTo(__razor_helper_writer, initialCode);

WriteLiteralTo(__razor_helper_writer, "</textarea>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"solution-control btn-group ctrl-group\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<button");

WriteLiteralTo(__razor_helper_writer, " type=\"button\"");

WriteLiteralTo(__razor_helper_writer, " class=\"run-solution-button btn btn-primary no-rounds\"");

WriteLiteralTo(__razor_helper_writer, " data-url=\"");

                                                                WriteTo(__razor_helper_writer, runSolutionUrl);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\tRun\r\n\t\t</button>\r\n\t</div>\r\n");


	
WriteTo(__razor_helper_writer, RunErrors());

                

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult Block(AbstractExerciseBlock block, BlockRenderContext context, HtmlHelper Html)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"exercise\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

		
         if (context.ManualChecking != null)
        {
	        
WriteTo(__razor_helper_writer, Html.Action("LastReviewComments", "Exercise", new { courseId = context.Course.Id, slideId = context.Slide.Id, userId = context.ManualChecking.UserId }));

                                                                                                                                                                    
        }

WriteLiteralTo(__razor_helper_writer, "\t\t\r\n");

		
          
			ExerciseBlockData data = context.GetBlockData(block);
			var manualCheckingId = context.ManualChecking != null ? (int?)context.ManualChecking.Id : null;

			if (Html != null)
			{
				
WriteTo(__razor_helper_writer, Html.Action("Submission", "Exercise", new { courseId = context.Course.Id, slideId = context.Slide.Id, submissionId = context.VersionId, manualCheckingId = manualCheckingId, isLti = data.IsLti, instructorView = manualCheckingId != null }));

                                                                                                                                                                                                                                                              
			}
			else
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"exercise__submission\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t<textarea");

WriteLiteralTo(__razor_helper_writer, " class=\"code code-exercise hidden\"");

WriteLiteralTo(__razor_helper_writer, " data-lang=\"");

                                             WriteTo(__razor_helper_writer, block.Language.GetName());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">");

                                                                         WriteTo(__razor_helper_writer, block.ExerciseInitialCode.EnsureEnoughLines(4));

WriteLiteralTo(__razor_helper_writer, "</textarea>\r\n\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"loading-spinner\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t\t<img");

WriteLiteralTo(__razor_helper_writer, " src=\"/Content/loading.gif\"");

WriteLiteralTo(__razor_helper_writer, "/>\r\n\t\t\t\t\t</div>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t");

WriteTo(__razor_helper_writer, ExerciseControls(new ExerciseControlsModel(context.Course.Id, (ExerciseSlide)context.Slide)
					{
						IsLti = context.IsLti,
						IsCodeEditableAndSendable = true,
						DebugView = data.DebugView,
						RunSolutionUrl = data.RunSolutionUrl,
					}));

WriteLiteralTo(__razor_helper_writer, "\r\n\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t");

WriteTo(__razor_helper_writer, RunErrors());

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t\t</div>\r\n");

			}
		
WriteLiteralTo(__razor_helper_writer, "\r\n\r\n");

		
         if (data.DebugView)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<div>\r\n\t\t\t\t<h3>Подсказки</h3>\r\n\t\t\t\t<ol>\r\n");

					
                     foreach (var hint in data.Block.HintsMd)
					{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t<li>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t");

WriteTo(__razor_helper_writer, MvcHtmlString.Create(hint.RenderMarkdown(context.BaseUrl)));

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t\t\t\t</li>\r\n");

					}

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t</ol>\r\n");

				
                 if (!string.IsNullOrEmpty(data.Block.CommentAfterExerciseIsSolved))
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<h3>Комментарий после решения</h3>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<p>");

WriteTo(__razor_helper_writer, data.Block.CommentAfterExerciseIsSolved);

WriteLiteralTo(__razor_helper_writer, "</p>\r\n");

				}

WriteLiteralTo(__razor_helper_writer, "\t\t\t</div>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\r\n");

		
         if (context.ManualChecking != null)
		{
			var checking = (ManualExerciseChecking)context.ManualChecking;

			
WriteTo(__razor_helper_writer, Html.Partial(
				"~/Views/Exercise/_ExerciseScoreForm.cshtml",
				new ExerciseScoreFormModel(
					context.Course.Id,
					(ExerciseSlide)context.Slide,
					checking,
					context.ManualCheckingsLeftInQueue,
					context.GroupsIds,
					isCurrentSubmissionChecking: (context.VersionId == null || checking.Submission.Id == context.VersionId) && !context.IsManualCheckingReadonly,
					defaultProhibitFurtherReview: context.DefaultProhibitFurtherReview
					)));

                      
		}

WriteLiteralTo(__razor_helper_writer, "\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult QuizBlock(ChoiceBlock block, BlockRenderContext context)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var items = block.ShuffledItems();
	var isMultiply = block.Multiple;
	var inputType = isMultiply ? "checkbox" : "radio";
	QuizBlockData model = context.GetBlockData(block);

	var mistakesCount = new MistakesCount();

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 13213), Tuple.Create("\"", 13266)
, Tuple.Create(Tuple.Create("", 13221), Tuple.Create("quiz-block-mark", 13221), true)
, Tuple.Create(Tuple.Create(" ", 13236), Tuple.Create<System.Object, System.Int32>(inputType
, 13237), false)
, Tuple.Create(Tuple.Create(" ", 13247), Tuple.Create<System.Object, System.Int32>(inputType
, 13248), false)
, Tuple.Create(Tuple.Create("", 13258), Tuple.Create("-default", 13258), true)
);

WriteAttributeTo(__razor_helper_writer, "id", Tuple.Create(" id=\'", 13267), Tuple.Create("\'", 13299)
, Tuple.Create(Tuple.Create("", 13272), Tuple.Create<System.Object, System.Int32>( block.Id + "_quizBlock"
, 13272), false)
);

WriteLiteralTo(__razor_helper_writer, ">\r\n");

		
         for (var itemIndex = 0; itemIndex < items.Length; itemIndex++)
		{
			var item = items[itemIndex];
			var id = isMultiply ? itemIndex + "noMult" : model.BlockIndex.ToString();
			var itemChecked = model.ShowUserAnswers && model.QuizModel.AnswersToQuizzes != null && model.QuizModel.AnswersToQuizzes[block.Id].Select(x => x.ItemId).Contains(item.Id);
			var ans = itemChecked ? "checked" : "";
			var itemClass = "";
			var title = "";
			var readonlyAttr = context.CanUserFillQuiz ? "" : "disabled";

			var isItemCorrect = item.IsCorrect == ChoiceItemCorrectness.True || item.IsCorrect == ChoiceItemCorrectness.Maybe && itemChecked;
			var isUserAnswerCorrect = (itemChecked && isItemCorrect) || (!itemChecked && !isItemCorrect) || model.DebugView;
			mistakesCount.CheckedUnnecessary += itemChecked && !isItemCorrect ? 1 : 0;
			mistakesCount.NotCheckedNecessary += !itemChecked && isItemCorrect ? 1 : 0;
			if (model.ShowCorrectAnswers)
			{
				itemClass = isItemCorrect ? "right-quiz" : itemChecked ? "wrong-quiz" : "";
				title = (isItemCorrect ? "Правильный" : "Неправильный") + " вариант";
			}

WriteLiteralTo(__razor_helper_writer, "\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

				
                 if (model.ShowQuestionStatistics)
				{
					var className = item.IsCorrect.IsTrueOrMaybe() ? "quiz__statistics__correct" : "quiz__statistics__incorrect";
					if ((context.Slide as QuizSlide).ManualChecking)
					{
						className = "";
					}

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<div");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 14718), Tuple.Create("\"", 14753)
, Tuple.Create(Tuple.Create("", 14726), Tuple.Create("quiz__statistics", 14726), true)
, Tuple.Create(Tuple.Create(" ", 14742), Tuple.Create<System.Object, System.Int32>(className
, 14743), false)
);

WriteAttributeTo(__razor_helper_writer, "title", Tuple.Create(" title=\"", 14754), Tuple.Create("\"", 14838)
, Tuple.Create(Tuple.Create("", 14762), Tuple.Create("Этот", 14762), true)
, Tuple.Create(Tuple.Create(" ", 14766), Tuple.Create("вариант", 14767), true)
, Tuple.Create(Tuple.Create(" ", 14774), Tuple.Create("выбирают", 14775), true)
, Tuple.Create(Tuple.Create(" ", 14783), Tuple.Create("в", 14784), true)
           , Tuple.Create(Tuple.Create(" ", 14785), Tuple.Create<System.Object, System.Int32>( model.QuestionAnswersFrequency[item.Id]
, 14786), false)
, Tuple.Create(Tuple.Create("", 14829), Tuple.Create("%", 14829), true)
, Tuple.Create(Tuple.Create(" ", 14830), Tuple.Create("случаев", 14831), true)
);

WriteLiteralTo(__razor_helper_writer, ">");

                                                                                                                     WriteTo(__razor_helper_writer,  model.QuestionAnswersFrequency[item.Id]);

WriteLiteralTo(__razor_helper_writer, "%</div>\r\n");

				}

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<input ");

WriteTo(__razor_helper_writer, ans);

WriteLiteralTo(__razor_helper_writer, " autocomplete=\"off\" id=\'");

                      WriteTo(__razor_helper_writer,  block.Id + "quizBlock" + item.Id);

WriteLiteralTo(__razor_helper_writer, "\' name=");

                                                                 WriteTo(__razor_helper_writer,  "group" + id);

WriteLiteralTo(__razor_helper_writer, " type=\"");

                                                                                       WriteTo(__razor_helper_writer, inputType);

WriteLiteralTo(__razor_helper_writer, "\" ");

                                                                                                   WriteTo(__razor_helper_writer, GetGuestDisable(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, " ");

                                                                                                                                     WriteTo(__razor_helper_writer, readonlyAttr);

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t<label");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 15076), Tuple.Create("\"", 15094)
, Tuple.Create(Tuple.Create("", 15084), Tuple.Create<System.Object, System.Int32>(itemClass
, 15084), false)
);

WriteAttributeTo(__razor_helper_writer, "title", Tuple.Create(" title=\"", 15095), Tuple.Create("\"", 15109)
, Tuple.Create(Tuple.Create("", 15103), Tuple.Create<System.Object, System.Int32>(title
, 15103), false)
);

WriteAttributeTo(__razor_helper_writer, "for", Tuple.Create(" for=\"", 15110), Tuple.Create("\"", 15152)
, Tuple.Create(Tuple.Create("", 15116), Tuple.Create<System.Object, System.Int32>( block.Id + "quizBlock" + item.Id
, 15116), false)
);

WriteLiteralTo(__razor_helper_writer, " ");

                                                                      WriteTo(__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, ">\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t");

WriteTo(__razor_helper_writer, item.Description.Trim().RenderTex().ToLegacyHtmlString());

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t\t</label>\r\n");

				
                 if (model.ShowCorrectAnswers || model.ShowExplanations)
				{
					
WriteTo(__razor_helper_writer, ShowCorrectAnswerAndExplanationForChoiceItem(block, model, item, isUserAnswerCorrect));

                                                                                                          
				}

WriteLiteralTo(__razor_helper_writer, "\t\t\t</div>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t\t");

          
			var isBlockCorrect = IsBlockCorrect(model, block);
			if (model.ShowCorrectAnswers && isBlockCorrect && mistakesCount.HasAtLeastOneMistake())
			{
				
WriteTo(__razor_helper_writer, ShowMistakesExplanation(mistakesCount));

                                                       
			}
		
WriteLiteralTo(__razor_helper_writer, "\r\n\r\n\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult ShowMistakesExplanation(MistakesCount mistakesCount)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var text = "";
	if (mistakesCount.CheckedUnnecessary > 0)
	{
		var unnecessaryItemsText = mistakesCount.CheckedUnnecessary.PluralizeInRussian(new RussianPluralizationOptions
		{
			One = "лишний вариант",
			Two = "лишних варианта",
			Five = "лишних вариантов",
			hideNumberOne = false,
			smallNumbersAreWords = false,
		});
		text = "Вы выбрали " + unnecessaryItemsText;
	}
	if (mistakesCount.NotCheckedNecessary > 0)
	{
		var necessaryItemsText = mistakesCount.NotCheckedNecessary.PluralizeInRussian(new RussianPluralizationOptions
		{
			One = "правильный вариант",
			Two = "правильных варианта",
			Five = "правильных вариантов",
			hideNumberOne = false,
			smallNumbersAreWords = false,
		});
		text += text == "" ? "Вы " : " и ";
		text += "не выбрали " + necessaryItemsText;
	}

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-mistakes-explanation\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<strong>");

WriteTo(__razor_helper_writer, text);

WriteLiteralTo(__razor_helper_writer, ".</strong>\r\n\t\tНестрашно, в этом вопросе это допустимо. Вы все равно получаете пол" +
"ный балл!\r\n\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult QuizBlock(FillInBlock block, BlockRenderContext context)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var value = "";
	QuizBlockData model = context.GetBlockData(block);
	if (model.ShowUserAnswers && model.QuizModel.AnswersToQuizzes != null && model.QuizModel.AnswersToQuizzes[block.Id].FirstOrDefault() != null)
	{
		var answers = model.QuizModel.AnswersToQuizzes[block.Id];
		var userAnswer = answers.FirstOrDefault();
		value = userAnswer != null ? userAnswer.Text : "";
	}
	var sample = block.Sample;
	var readonlyAttr = context.CanUserFillQuiz ? "" : "readonly";

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz quiz-block-input\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<label ");

WriteTo(__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, ">\r\n");

			
             if (block.Multiline)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<textarea");

WriteLiteralTo(__razor_helper_writer, " class=\"form-control\"");

WriteAttributeTo(__razor_helper_writer, "id", Tuple.Create(" id=\'", 17424), Tuple.Create("\'", 17455)
, Tuple.Create(Tuple.Create("", 17429), Tuple.Create<System.Object, System.Int32>( block.Id + "quizBlock"
, 17429), false)
);

WriteAttributeTo(__razor_helper_writer, "maxlength", Tuple.Create(" maxlength=\"", 17456), Tuple.Create("\"", 17502)
         , Tuple.Create(Tuple.Create("", 17468), Tuple.Create<System.Object, System.Int32>(QuizController.MaxFillInBlockSize
, 17468), false)
);

WriteLiteralTo(__razor_helper_writer, " ");

                                                                                                WriteTo(__razor_helper_writer, GetGuestDisable(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, " ");

                                                                                                                                  WriteTo(__razor_helper_writer, readonlyAttr);

WriteLiteralTo(__razor_helper_writer, " cols=\"110\" rows=\"5\">");

                                                                                                                                                                    WriteTo(__razor_helper_writer, value);

WriteLiteralTo(__razor_helper_writer, "</textarea>\r\n");

			}
			else
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<input\r\n\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\tvalue=\"");

WriteTo(__razor_helper_writer, value);

WriteLiteralTo(__razor_helper_writer, "\"\r\n\t\t\t\t\tid=\'");

WriteTo(__razor_helper_writer,  block.Id + "quizBlock");

WriteLiteralTo(__razor_helper_writer, "\'\r\n\t\t\t\t\tmaxlength=\"");

 WriteTo(__razor_helper_writer, QuizController.MaxFillInBlockSize);

WriteLiteralTo(__razor_helper_writer, "\"\r\n\t\t\t\t\tsize=\"68\"\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t");

WriteTo(__razor_helper_writer, GetGuestDisable(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, "\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t");

WriteTo(__razor_helper_writer, readonlyAttr);

WriteLiteralTo(__razor_helper_writer, "/>\r\n");

			}

WriteLiteralTo(__razor_helper_writer, "\t\t</label>\r\n\t</div>\r\n");

	if (model.ShowCorrectAnswers)
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<div>Правильный ответ: ");

 WriteTo(__razor_helper_writer, sample);

WriteLiteralTo(__razor_helper_writer, "</div>\r\n");

	}
	if (model.ShowExplanations && !string.IsNullOrEmpty(block.Explanation))
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<p");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation\"");

WriteLiteralTo(__razor_helper_writer, ">");

       WriteTo(__razor_helper_writer, block.Explanation);

WriteLiteralTo(__razor_helper_writer, "</p>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult QuizBlock(IsTrueBlock block, BlockRenderContext context)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var trueChecked = "";
	var falseChecked = "";
	var trueItemClass = "";
	var falseItemClass = "";
	var trueTitle = "";
	var falseTitle = "";
	var isUserAnswerCorrect = false;
	QuizBlockData model = context.GetBlockData(block);
	if (model.ShowUserAnswers && model.QuizModel.AnswersToQuizzes != null && model.QuizModel.AnswersToQuizzes[block.Id].FirstOrDefault() != null)
	{
		var userAnswer = model.QuizModel.AnswersToQuizzes[block.Id].Select(x => x.Text).FirstOrDefault() == "True";
		isUserAnswerCorrect = userAnswer == block.Answer;
		trueChecked = userAnswer ? "checked" : "";
		falseChecked = userAnswer ? "" : "checked";
		if (model.QuizState.Status == QuizStatus.Sent)
		{
			trueItemClass = block.Answer ? "right-quiz" : userAnswer ? "wrong-quiz" : "";
			falseItemClass = !block.Answer ? "right-quiz" : !userAnswer ? "wrong-quiz" : "";
		}
	}
	if (model.QuizState.Status == QuizStatus.Sent)
	{
		trueTitle = (block.Answer ? "Правильный" : "Неправильный") + " вариант";
		falseTitle = (!block.Answer ? "Правильный" : "Неправильный") + " вариант";
	}
	var readonlyAttr = context.CanUserFillQuiz ? "" : "disabled";

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"radio quiz-block-mark\"");

WriteAttributeTo(__razor_helper_writer, "id", Tuple.Create(" id=\"", 19365), Tuple.Create("\"", 19397)
, Tuple.Create(Tuple.Create("", 19370), Tuple.Create<System.Object, System.Int32>( block.Id + "_quizBlock"
, 19370), false)
);

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t<input");

WriteLiteralTo(__razor_helper_writer, " autocomplete=\"off\"");

WriteLiteralTo(__razor_helper_writer, " ");

        WriteTo(__razor_helper_writer, trueChecked);

WriteLiteralTo(__razor_helper_writer, " id=\'");

                          WriteTo(__razor_helper_writer,  block.Id + "quizBlock" + "True");

WriteLiteralTo(__razor_helper_writer, "\' name=\'");

                                                                     WriteTo(__razor_helper_writer,  block.Id + "group");

WriteLiteralTo(__razor_helper_writer, "\' type=\"radio\" ");

                                                                                                         WriteTo(__razor_helper_writer, GetGuestDisable(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, " ");

                                                                                                                                           WriteTo(__razor_helper_writer, readonlyAttr);

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t<label");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 19608), Tuple.Create("\"", 19630)
, Tuple.Create(Tuple.Create("", 19616), Tuple.Create<System.Object, System.Int32>(trueItemClass
, 19616), false)
);

WriteAttributeTo(__razor_helper_writer, "title", Tuple.Create(" title=\"", 19631), Tuple.Create("\"", 19649)
, Tuple.Create(Tuple.Create("", 19639), Tuple.Create<System.Object, System.Int32>(trueTitle
, 19639), false)
);

WriteAttributeTo(__razor_helper_writer, "for", Tuple.Create(" for=\"", 19650), Tuple.Create("\"", 19691)
, Tuple.Create(Tuple.Create("", 19656), Tuple.Create<System.Object, System.Int32>( block.Id + "quizBlock" + "True"
, 19656), false)
);

WriteLiteralTo(__razor_helper_writer, " ");

                                                                         WriteTo(__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, ">Верно</label>\r\n\t\t</div>\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t<input");

WriteLiteralTo(__razor_helper_writer, " autocomplete=\"off\"");

WriteLiteralTo(__razor_helper_writer, " ");

        WriteTo(__razor_helper_writer, falseChecked);

WriteLiteralTo(__razor_helper_writer, " id=\'");

                           WriteTo(__razor_helper_writer,  block.Id + "quizBlock" + "False");

WriteLiteralTo(__razor_helper_writer, "\' name=\'");

                                                                       WriteTo(__razor_helper_writer,  block.Id + "group");

WriteLiteralTo(__razor_helper_writer, "\' type=\"radio\" ");

                                                                                                           WriteTo(__razor_helper_writer, GetGuestDisable(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, " ");

                                                                                                                                             WriteTo(__razor_helper_writer, readonlyAttr);

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t<label");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 19961), Tuple.Create("\"", 19984)
, Tuple.Create(Tuple.Create("", 19969), Tuple.Create<System.Object, System.Int32>(falseItemClass
, 19969), false)
);

WriteAttributeTo(__razor_helper_writer, "title", Tuple.Create(" title=\"", 19985), Tuple.Create("\"", 20004)
, Tuple.Create(Tuple.Create("", 19993), Tuple.Create<System.Object, System.Int32>(falseTitle
, 19993), false)
);

WriteAttributeTo(__razor_helper_writer, "for", Tuple.Create(" for=\"", 20005), Tuple.Create("\"", 20047)
, Tuple.Create(Tuple.Create("", 20011), Tuple.Create<System.Object, System.Int32>( block.Id + "quizBlock" + "False"
, 20011), false)
);

WriteLiteralTo(__razor_helper_writer, " ");

                                                                            WriteTo(__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, ">Неверно</label>\r\n\t\t</div>\r\n\t</div>\r\n");

	if (model.DebugView)
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<p");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation__correct\"");

WriteLiteralTo(__razor_helper_writer, ">Правильный ответ:</span> ");

                                                 WriteTo(__razor_helper_writer,  block.Answer ? "Верно" : "Неверно");

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t</p>\r\n");

	}
	if (model.ShowExplanations && !string.IsNullOrEmpty(block.Explanation))
	{
		var className = "";
		if (model.ShowCorrectAnswers)
		{
			className = isUserAnswerCorrect ? "quiz__explanation__correct" : "quiz__explanation__incorrect";
		}

WriteLiteralTo(__razor_helper_writer, "\t\t<p");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 20549), Tuple.Create("\"", 20585)
, Tuple.Create(Tuple.Create("", 20557), Tuple.Create("quiz__explanation", 20557), true)
, Tuple.Create(Tuple.Create(" ", 20574), Tuple.Create<System.Object, System.Int32>(className
, 20575), false)
);

WriteLiteralTo(__razor_helper_writer, ">");

                  WriteTo(__razor_helper_writer, block.Explanation);

WriteLiteralTo(__razor_helper_writer, "</p>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult QuizBlock(OrderingBlock block, BlockRenderContext context)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var items = block.ShuffledItems();
	var correctItems = block.Items;
	QuizBlockData model = context.GetBlockData(block);
	if (model.ShowUserAnswers && model.QuizModel.AnswersToQuizzes != null && model.QuizModel.AnswersToQuizzes[block.Id].FirstOrDefault() != null)
	{
		var userAnswers = model.QuizModel.AnswersToQuizzes[block.Id].Select(x => x.ItemId).ToList();
		items = items.OrderBy(item => userAnswers.IndexOf(item.GetHash())).ToArray();
	}

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 21149), Tuple.Create("\"", 21225)
, Tuple.Create(Tuple.Create("", 21157), Tuple.Create("quiz-block-ordering", 21157), true)
, Tuple.Create(Tuple.Create(" ", 21176), Tuple.Create<System.Object, System.Int32>( context.CanUserFillQuiz ? "" : "not-movable"
, 21177), false)
);

WriteAttributeTo(__razor_helper_writer, "id", Tuple.Create(" id=\'", 21226), Tuple.Create("\'", 21258)
          , Tuple.Create(Tuple.Create("", 21231), Tuple.Create<System.Object, System.Int32>( block.Id + "_quizBlock"
, 21231), false)
);

WriteLiteralTo(__razor_helper_writer, " ");

                                                                                         WriteTo(__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, ">\r\n");

		
         if (model.ShowCorrectAnswers)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-ordering__correct-description row\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"text-success col-sm-5 col-sm-offset-6\"");

WriteLiteralTo(__razor_helper_writer, ">Правильный ответ</div>\r\n\t\t\t</div>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"ul\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

			
             for (var itemIndex = 0; itemIndex < items.Length; itemIndex++)
			{
				var item = items[itemIndex];

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"li row\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz quiz-block-ordering__item col-xs-12 col-sm-5\"");

WriteLiteralTo(__razor_helper_writer, " data-item-id=\"");

                                                                   WriteTo(__razor_helper_writer, item.GetHash());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

						
                         if (context.CanUserFillQuiz)
						{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-ordering__item__icons\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"glyphicon glyphicon-arrow-up\"");

WriteLiteralTo(__razor_helper_writer, "></span>\r\n\t\t\t\t\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"glyphicon glyphicon-arrow-down\"");

WriteLiteralTo(__razor_helper_writer, "></span>\r\n\t\t\t\t\t\t\t</div>\r\n");

						}

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t<input");

WriteLiteralTo(__razor_helper_writer, " autocomplete=\"off\"");

WriteAttributeTo(__razor_helper_writer, "id", Tuple.Create(" id=\'", 22026), Tuple.Create("\'", 22074)
, Tuple.Create(Tuple.Create("", 22031), Tuple.Create<System.Object, System.Int32>( block.Id + "quizBlock" + item.GetHash()
, 22031), false)
);

WriteLiteralTo(__razor_helper_writer, " type=\"hidden\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"text\"");

WriteLiteralTo(__razor_helper_writer, ">");

            WriteTo(__razor_helper_writer, item.Text.RenderTex().ToLegacyHtmlString());

WriteLiteralTo(__razor_helper_writer, "</div>\r\n\t\t\t\t\t</div>\r\n");

					
                     if (model.ShowCorrectAnswers)
					{
						var correctItem = correctItems[itemIndex];

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-ordering__item correct col-xs-12 col-sm-offset-1 col-sm-5\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t");

WriteTo(__razor_helper_writer, correctItem.Text.RenderTex().ToLegacyHtmlString());

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t\t\t\t</div>\r\n");

					}

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t</div>\r\n");

			}

WriteLiteralTo(__razor_helper_writer, "\t\t</div>\r\n\t</div>\r\n");

	if (model.ShowExplanations && !string.IsNullOrEmpty(block.Explanation))
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<p");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation\"");

WriteLiteralTo(__razor_helper_writer, ">");

       WriteTo(__razor_helper_writer, block.Explanation);

WriteLiteralTo(__razor_helper_writer, "</p>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult QuizBlock(MatchingBlock block, BlockRenderContext context)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var fixedItems = block.GetMatches(block.ShuffleFixed);
	var movableItems = block.GetMatches(true);

	QuizBlockData model = context.GetBlockData(block);
	if (model.ShowUserAnswers && model.QuizModel.AnswersToQuizzes != null && model.QuizModel.AnswersToQuizzes[block.Id].FirstOrDefault() != null)
	{
		var userAnswers = model.QuizModel.AnswersToQuizzes[block.Id];
		fixedItems = GetFixedItemsAccordingToUserAnswers(userAnswers, fixedItems)
			.OrderBy(item => userAnswers.FindIndex(answer => item.GetHashForFixedItem() == answer.ItemId)).ToList();
		movableItems = GetMovableItemsAccordingToUserAnswers(userAnswers, fixedItems);
	}

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 23343), Tuple.Create("\"", 23419)
, Tuple.Create(Tuple.Create("", 23351), Tuple.Create("quiz-block-matching", 23351), true)
, Tuple.Create(Tuple.Create(" ", 23370), Tuple.Create<System.Object, System.Int32>( context.CanUserFillQuiz ? "" : "not-movable"
, 23371), false)
);

WriteAttributeTo(__razor_helper_writer, "id", Tuple.Create(" id=\'", 23420), Tuple.Create("\'", 23452)
          , Tuple.Create(Tuple.Create("", 23425), Tuple.Create<System.Object, System.Int32>( block.Id + "_quizBlock"
, 23425), false)
);

WriteLiteralTo(__razor_helper_writer, " ");

                                                                                         WriteTo(__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WriteLiteralTo(__razor_helper_writer, ">\r\n");

		
         if (model.QuizState.Status == QuizStatus.ReadyToSend)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__description text-muted\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"visible-xs\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\tНажмите сначала на&nbsp;блоке из&nbsp;правого столбца, а&nbsp;затем на&nb" +
"sp;свободном месте в&nbsp;левом.\r\n\t\t\t\t</span>\r\n\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"hidden-xs\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\tПеретащите блоки из&nbsp;правого столбца на&nbsp;свободные места.\r\n\t\t\t\t</" +
"span>\r\n\t\t\t</div>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t\t");

         if (model.QuizState.Status == QuizStatus.Sent)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__correct-description row\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

				
                 if (!model.DebugView)
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"text-muted col-sm-3 col-sm-offset-3\"");

WriteLiteralTo(__razor_helper_writer, ">Ваш вариант</div>\r\n");

				}

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t");

                 if (model.ShowCorrectAnswers)
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<div");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 24188), Tuple.Create("\"", 24277)
, Tuple.Create(Tuple.Create("", 24196), Tuple.Create("text-success", 24196), true)
, Tuple.Create(Tuple.Create(" ", 24208), Tuple.Create("col-sm-3", 24209), true)
, Tuple.Create(Tuple.Create(" ", 24217), Tuple.Create<System.Object, System.Int32>( model.DebugView ? "col-xs-offset-4" : "col-xs-offset-1"
, 24218), false)
);

WriteLiteralTo(__razor_helper_writer, ">Правильный вариант</div>\r\n");

				}

WriteLiteralTo(__razor_helper_writer, "\t\t\t</div>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"ul\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

			
             for (var itemIndex = 0; itemIndex < fixedItems.Count; itemIndex++)
			{
				var fixedItem = fixedItems[itemIndex];
				var movableItem = movableItems[itemIndex];
				var isRightClass = "";
				if (model.ShowCorrectAnswers)
				{
					isRightClass = fixedItem.Id == movableItem.Id || model.DebugView ? "right" : "wrong";
				}

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"li\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t<div");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 24718), Tuple.Create("\"", 24774)
, Tuple.Create(Tuple.Create("", 24726), Tuple.Create("quiz", 24726), true)
, Tuple.Create(Tuple.Create(" ", 24730), Tuple.Create("quiz-block-matching__item", 24731), true)
, Tuple.Create(Tuple.Create(" ", 24756), Tuple.Create<System.Object, System.Int32>(isRightClass
, 24757), false)
, Tuple.Create(Tuple.Create(" ", 24770), Tuple.Create("row", 24771), true)
);

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t\t<input");

WriteLiteralTo(__razor_helper_writer, " autocomplete=\"off\"");

WriteAttributeTo(__razor_helper_writer, "id", Tuple.Create(" id=\'", 24809), Tuple.Create("\'", 24874)
, Tuple.Create(Tuple.Create("", 24814), Tuple.Create<System.Object, System.Int32>( block.Id + "quizBlock" + fixedItem.GetHashForFixedItem()
, 24814), false)
);

WriteLiteralTo(__razor_helper_writer, " type=\"hidden\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__fixed-item col-xs-3\"");

WriteLiteralTo(__razor_helper_writer, " data-item-id=\"");

                                                              WriteTo(__razor_helper_writer, fixedItem.GetHashForFixedItem());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">");

                                                                                                WriteTo(__razor_helper_writer, fixedItem.FixedItem.RenderTex().ToLegacyHtmlString());

WriteLiteralTo(__razor_helper_writer, "</div>\r\n");

						
                         if (model.QuizState.Status == QuizStatus.ReadyToSend && !model.ShowUserAnswers)
						{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__droppable col-xs-3\"");

WriteLiteralTo(__razor_helper_writer, " data-block-id=\"");

                                                                  WriteTo(__razor_helper_writer, block.Id);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-item-id=\"");

                                                                                           WriteTo(__razor_helper_writer, fixedItem.GetHashForFixedItem());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, "></div>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__source__droppable col-xs-3 col-xs-offset-1 added\"");

WriteLiteralTo(__razor_helper_writer, " data-block-id=\"");

                                                                                                WriteTo(__razor_helper_writer, block.Id);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-movable-item-id=\"");

                                                                                                                                 WriteTo(__razor_helper_writer, movableItem.GetHashForMovableItem());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__movable-item\"");

WriteLiteralTo(__razor_helper_writer, " data-block-id=\"");

                                                                WriteTo(__razor_helper_writer, block.Id);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-item-id=\"");

                                                                                         WriteTo(__razor_helper_writer, movableItem.GetHashForMovableItem());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">");

                                                                                                                               WriteTo(__razor_helper_writer, movableItem.MovableItem.RenderTex().ToLegacyHtmlString());

WriteLiteralTo(__razor_helper_writer, "</div>\r\n\t\t\t\t\t\t\t</div>\r\n");

						}
						else
						{
							if (!model.DebugView)
							{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__droppable col-xs-3 added\"");

WriteLiteralTo(__razor_helper_writer, " data-block-id=\"");

                                                                            WriteTo(__razor_helper_writer, block.Id);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-item-id=\"");

                                                                                                     WriteTo(__razor_helper_writer, fixedItem.GetHashForFixedItem());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-movable-item-id=\"");

                                                                                                                                                             WriteTo(__razor_helper_writer, movableItem.GetHashForMovableItem());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__movable-item\"");

WriteLiteralTo(__razor_helper_writer, " data-block-id=\"");

                                                                    WriteTo(__razor_helper_writer, block.Id);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-item-id=\"");

                                                                                             WriteTo(__razor_helper_writer, movableItem.GetHashForMovableItem());

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">");

                                                                                                                                   WriteTo(__razor_helper_writer, movableItem.MovableItem.RenderTex().ToLegacyHtmlString());

WriteLiteralTo(__razor_helper_writer, "</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n");

							}
							if (model.ShowCorrectAnswers)
							{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__fixed-item correct col-xs-3 col-xs-offset-1\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t\t\t");

      WriteTo(__razor_helper_writer, fixedItem.MovableItem.RenderTex().ToLegacyHtmlString());

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t\t\t\t\t\t</div>\r\n");

							}
							if (context.CanUserFillQuiz)
							{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t\t\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz-block-matching__source__droppable col-xs-3 col-xs-offset-1\"");

WriteLiteralTo(__razor_helper_writer, " data-block-id=\"");

                                                                                              WriteTo(__razor_helper_writer, block.Id);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\t\t\t\t</div>\r\n");

							}
						}

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n");

			}

WriteLiteralTo(__razor_helper_writer, "\t\t</div>\r\n\t</div>\r\n");

	if (model.ShowExplanations && !string.IsNullOrEmpty(block.Explanation))
	{

WriteLiteralTo(__razor_helper_writer, "\t\t<p");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation\"");

WriteLiteralTo(__razor_helper_writer, ">");

       WriteTo(__razor_helper_writer, block.Explanation);

WriteLiteralTo(__razor_helper_writer, "</p>\r\n");

	}

});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult RunErrors()
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-result run-service-error\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-verdict label-warning\"");

WriteLiteralTo(__razor_helper_writer, ">Ошибка сервера :(</div>\r\n\t\t<pre");

WriteLiteralTo(__razor_helper_writer, " class=\"no-rounds\"");

WriteLiteralTo(__razor_helper_writer, "><code");

WriteLiteralTo(__razor_helper_writer, " class=\"run-details\"");

WriteLiteralTo(__razor_helper_writer, "></code></pre>\r\n\t</div>\r\n");



WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-result run-compile-error\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-verdict label-danger\"");

WriteLiteralTo(__razor_helper_writer, ">Ошибка компиляции</div>\r\n\t\t<pre");

WriteLiteralTo(__razor_helper_writer, " class=\"no-rounds\"");

WriteLiteralTo(__razor_helper_writer, "><code");

WriteLiteralTo(__razor_helper_writer, " class=\"run-details\"");

WriteLiteralTo(__razor_helper_writer, "></code></pre>\r\n\t</div>\r\n");



WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-result run-style-error\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-verdict label-warning\"");

WriteLiteralTo(__razor_helper_writer, ">Задача сдана. Осталось исправить стилевые ошибки!</div>\r\n\t\t<pre");

WriteLiteralTo(__razor_helper_writer, " class=\"no-rounds\"");

WriteLiteralTo(__razor_helper_writer, "><code");

WriteLiteralTo(__razor_helper_writer, " class=\"run-details\"");

WriteLiteralTo(__razor_helper_writer, "></code></pre>\r\n\t\t<div>\r\n\t\t\t<small>Код со стилевыми ошибками трудно или неприятно" +
" читать другим программистам, поэтому он может не пройти код-ревью.</small>\r\n\t\t<" +
"/div>\r\n\t</div>\r\n");



WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-result run-wa\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-verdict label-danger\"");

WriteLiteralTo(__razor_helper_writer, ">Неверный результат</div>\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"diff-table tablesorter\"");

WriteLiteralTo(__razor_helper_writer, "></div>\r\n\t</div>\r\n");



WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-result run-wa-no-diff\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-verdict label-danger\"");

WriteLiteralTo(__razor_helper_writer, ">Неверный результат</div>\r\n\t\t<pre");

WriteLiteralTo(__razor_helper_writer, " class=\"no-rounds\"");

WriteLiteralTo(__razor_helper_writer, "><code");

WriteLiteralTo(__razor_helper_writer, " class=\"run-details\"");

WriteLiteralTo(__razor_helper_writer, "></code></pre>\r\n\t</div>\r\n");



WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-result run-success\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"run-verdict label-success clearfix\"");

WriteLiteralTo(__razor_helper_writer, ">Задача сдана!</div>\r\n\t\t<pre");

WriteLiteralTo(__razor_helper_writer, " class=\"no-rounds\"");

WriteLiteralTo(__razor_helper_writer, "><code");

WriteLiteralTo(__razor_helper_writer, " class=\"run-details\"");

WriteLiteralTo(__razor_helper_writer, "></code></pre>\r\n\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult ExerciseControls(ExerciseControlsModel model)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 

WriteLiteralTo(__razor_helper_writer, "\t<div");

WriteLiteralTo(__razor_helper_writer, " class=\"solution-control btn-group ctrl-group\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

		
         if (!model.IsCodeEditableAndSendable)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<button");

WriteLiteralTo(__razor_helper_writer, " type=\"button\"");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 28290), Tuple.Create("\"", 28407)
, Tuple.Create(Tuple.Create("", 28298), Tuple.Create("try-again-button", 28298), true)
, Tuple.Create(Tuple.Create(" ", 28314), Tuple.Create("btn", 28315), true)
, Tuple.Create(Tuple.Create(" ", 28318), Tuple.Create("btn-primary", 28319), true)
, Tuple.Create(Tuple.Create(" ", 28330), Tuple.Create("exercise-version-link", 28331), true)
               , Tuple.Create(Tuple.Create(" ", 28352), Tuple.Create<System.Object, System.Int32>( model.IsLti ? "exercise-controls_button-long" : ""
, 28353), false)
);

WriteLiteralTo(__razor_helper_writer, " data-version-id=\"-1\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\tЕщё раз\r\n\t\t\t</button>\r\n");

		}
		else
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<button");

WriteLiteralTo(__razor_helper_writer, " type=\"button\"");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 28501), Tuple.Create("\"", 28599)
, Tuple.Create(Tuple.Create("", 28509), Tuple.Create("run-solution-button", 28509), true)
, Tuple.Create(Tuple.Create(" ", 28528), Tuple.Create("btn", 28529), true)
, Tuple.Create(Tuple.Create(" ", 28532), Tuple.Create("btn-primary", 28533), true)
, Tuple.Create(Tuple.Create(" ", 28544), Tuple.Create<System.Object, System.Int32>( model.IsLti ? "exercise-controls_button-long" : ""
, 28545), false)
);

WriteLiteralTo(__razor_helper_writer, " data-url=\"");

                                                                                                                  WriteTo(__razor_helper_writer,  model.RunSolutionUrl);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\tОтправить\r\n\t\t\t</button>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t\t");

         if (!model.DebugView)
		{
			var hints = model.Block.HintsMd;

WriteLiteralTo(__razor_helper_writer, "\t\t\t<button");

WriteLiteralTo(__razor_helper_writer, " id=\"GetHintButton\"");

WriteLiteralTo(__razor_helper_writer, " type=\"button\"");

WriteLiteralTo(__razor_helper_writer, " class=\"btn btn-default hints-btn\"");

WriteLiteralTo(__razor_helper_writer, " data-course-id=\"");

                                                                          WriteTo(__razor_helper_writer,  model.CourseId);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-slide-id=\"");

                                                                                                             WriteTo(__razor_helper_writer,  model.Slide.Id);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-hints-count=\"");

                                                                                                                                                   WriteTo(__razor_helper_writer,  hints.Count);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, " data-url=\"");

                                                                                                                                                                              WriteTo(__razor_helper_writer,  model.UseHintUrl);

WriteLiteralTo(__razor_helper_writer, "\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\tВзять подсказку\r\n\t\t\t</button>\r\n");

			if (model.CanShowOutput)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<button");

WriteLiteralTo(__razor_helper_writer, " type=\"button\"");

WriteAttributeTo(__razor_helper_writer, "class", Tuple.Create(" class=\"", 29054), Tuple.Create("\"", 29147)
, Tuple.Create(Tuple.Create("", 29062), Tuple.Create("show-output-button", 29062), true)
, Tuple.Create(Tuple.Create(" ", 29080), Tuple.Create("btn", 29081), true)
, Tuple.Create(Tuple.Create(" ", 29084), Tuple.Create("btn-default", 29085), true)
, Tuple.Create(Tuple.Create(" ", 29096), Tuple.Create<System.Object, System.Int32>( model.IsShowOutputButtonActive ? "active" : ""
, 29097), false)
);

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\tПоказать вывод\r\n\t\t\t\t</button>\r\n");

			}
			if (!model.IsLti && !model.HideShowSolutionsButton)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<button");

WriteLiteralTo(__razor_helper_writer, " type=\"button\"");

WriteLiteralTo(__razor_helper_writer, " class=\"btn btn-default giveup-btn\"");

WriteAttributeTo(__razor_helper_writer, "onclick", Tuple.Create(" onclick=\"", 29315), Tuple.Create("\"", 29358)
  , Tuple.Create(Tuple.Create("", 29325), Tuple.Create<System.Object, System.Int32>( model.AcceptedSolutionsAction
, 29325), false)
);

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\tЧужие решения\r\n\t\t\t\t</button>\r\n");

			}
			if (model.IsCodeEditableAndSendable)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<button");

WriteLiteralTo(__razor_helper_writer, " type=\"button\"");

WriteLiteralTo(__razor_helper_writer, " class=\"btn btn-default reset-btn\"");

WriteLiteralTo(__razor_helper_writer, " onclick=\"cleanUserCode()\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n\t\t\t\t\tНачать с начала\r\n\t\t\t\t</button>\r\n");

			}
		}

WriteLiteralTo(__razor_helper_writer, "\t</div>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden

#line default
#line hidden
public static System.Web.WebPages.HelperResult ShowCorrectAnswerAndExplanationForChoiceItem(ChoiceBlock block, QuizBlockData model, ChoiceItem item, bool isUserAnswerCorrect)
{
#line default
#line hidden
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {
 
	var hasExplanation = model.ShowExplanations && !string.IsNullOrEmpty(item.Explanation);

WriteLiteralTo(__razor_helper_writer, "\t<p");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

		
         if (model.ShowCorrectAnswers)
		{
			var dotIfHasExplanation = hasExplanation ? ". " : "";
			if (item.IsCorrect == ChoiceItemCorrectness.Maybe)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation__correct\"");

WriteLiteralTo(__razor_helper_writer, " title=\"Этот вариант можно было как выбрать, так и не выбирать\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t");

WriteTo(__razor_helper_writer,  model.DebugView ? "Допустимый ответ" : "Допустимо");

                                            WriteTo(__razor_helper_writer, dotIfHasExplanation);

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t\t</span>\r\n");

			}
			else if (isUserAnswerCorrect && item.IsCorrect == ChoiceItemCorrectness.True)
			{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation__correct\"");

WriteLiteralTo(__razor_helper_writer, ">\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t");

WriteTo(__razor_helper_writer,  model.DebugView ? ("Правильный ответ" + dotIfHasExplanation) : "Правильно!");

WriteLiteralTo(__razor_helper_writer, "\r\n\t\t\t\t</span>\r\n");

			}
			else if (!isUserAnswerCorrect)
			{
				if (!block.Multiple && item.IsCorrect == ChoiceItemCorrectness.True)
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation__correct\"");

WriteLiteralTo(__razor_helper_writer, ">Этот ответ был правильным");

                                                         WriteTo(__razor_helper_writer,  dotIfHasExplanation);

WriteLiteralTo(__razor_helper_writer, "</span>\r\n");

				}
				else if (!hasExplanation && block.Multiple && item.IsCorrect == ChoiceItemCorrectness.True)
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation__incorrect\"");

WriteLiteralTo(__razor_helper_writer, ">Вы ошиблись.</span>\r\n");

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<span>Этот ответ надо было выбрать</span>\r\n");

				}
				else if (block.Multiple)
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation__incorrect\"");

WriteLiteralTo(__razor_helper_writer, ">Вы ошиблись");

                                             WriteTo(__razor_helper_writer,  dotIfHasExplanation);

WriteLiteralTo(__razor_helper_writer, "</span>\r\n");

				}
				else
				{

WriteLiteralTo(__razor_helper_writer, "\t\t\t\t\t<span");

WriteLiteralTo(__razor_helper_writer, " class=\"quiz__explanation__incorrect\"");

WriteLiteralTo(__razor_helper_writer, ">Неправильно");

                                             WriteTo(__razor_helper_writer,  dotIfHasExplanation);

WriteLiteralTo(__razor_helper_writer, "</span>\r\n");

				}
			}
		}

WriteLiteralTo(__razor_helper_writer, "\r\n");

		
         if (hasExplanation)
		{

WriteLiteralTo(__razor_helper_writer, "\t\t\t<span>");

WriteTo(__razor_helper_writer, item.Explanation);

WriteLiteralTo(__razor_helper_writer, "</span>\r\n");

		}

WriteLiteralTo(__razor_helper_writer, "\t</p>\r\n");


});

#line default
#line hidden
}
#line default
#line hidden
 

	public static string GetGuestOnclick(bool isGuest)
	{
		return isGuest ? "onclick=loginForContinue()" : "";
	}

	public static string GetGuestDisable(bool isGuest)
	{
		return isGuest ? "disabled" : null;
	}

	private static List<MatchingMatch> GetFixedItemsAccordingToUserAnswers(List<UserQuizAnswer> userAnswers, List<MatchingMatch> fixedItems)
	{
		var filteredFixedItems = new List<MatchingMatch>();
		foreach (var fixedItem in fixedItems)
		{
			var userAnswered = userAnswers.Any(answer => answer.ItemId == fixedItem.GetHashForFixedItem());
			if (userAnswered)
				filteredFixedItems.Add(fixedItem);
		}
		return filteredFixedItems;
	}

	private static List<MatchingMatch> GetMovableItemsAccordingToUserAnswers(List<UserQuizAnswer> userAnswers, List<MatchingMatch> fixedItems)
	{
		var movableItems = new List<MatchingMatch>();
		foreach (var fixedItem in fixedItems)
		{
			var userAnswer = userAnswers.FirstOrDefault(answer => answer.ItemId == fixedItem.GetHashForFixedItem());
			if (userAnswer != null)
				movableItems.Add(fixedItems.FirstOrDefault(item => item.GetHashForMovableItem() == userAnswer.Text));
		}
		return movableItems;
	}


    }
}
#pragma warning restore 1591
