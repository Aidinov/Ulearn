#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace uLearn.Web.Views.Course
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using uLearn;
    using uLearn.Model.Blocks;
    using uLearn.Quizes;
    using uLearn.Web.Controllers;
    using uLearn.Web.Models;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    public static class SlideHtml
    {

public static System.Web.WebPages.HelperResult Slide(BlockRenderContext context, HtmlHelper Html, int currentScore = 0)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"slide\">\r\n\t\t<h1>\r\n\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, context.Slide.Title);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t<span class=\"score\">");


WebViewPage.WriteTo(@__razor_helper_writer, Score(currentScore, context.Slide.MaxScore));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</span>\r\n\t\t</h1>\r\n\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, Blocks(context, Html));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t</div>\r\n");



});

}


public static System.Web.WebPages.HelperResult Blocks(BlockRenderContext context, HtmlHelper Html)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	foreach (var blockRange in context.Slide.GetBlocksRangesWithSameVisibility())
	{
		if (!blockRange[0].Hide)
		{
			foreach (var block in blockRange)
			{
				
WebViewPage.WriteTo(@__razor_helper_writer, Block((dynamic)block, context, Html));

                                         
			}
		}
		else if (context.RevealHidden)
		{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t<div class=\'revealed\' data-toggle=\"tooltip\" data-placement=\"left\" title=\"Этот " +
"блок студенты не видят\">\r\n");


 				foreach (var block in blockRange)
				{
					
WebViewPage.WriteTo(@__razor_helper_writer, Block((dynamic)block, context, Html));

                                          
				}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t</div>\r\n");


		}
	}

});

}


public static System.Web.WebPages.HelperResult Block(AbstractQuestionBlock block, BlockRenderContext context, HtmlHelper Html)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	var mark = "";
	var style = "";
	var blockScore = -1;
	QuizBlockData model = context.GetBlockData(block);
	if (model.QuizState != QuizState.NotPassed && model.QuizState != QuizState.WaitForCheck && model.QuizState != QuizState.IsChecking)
	{
		if (model.QuizModel != null && model.QuizModel.ResultsForQuizes != null)
		{
			var res = model.QuizModel.ResultsForQuizes.TryGetValue(block.Id, out blockScore) && blockScore == block.MaxScore;
			mark = "glyphicon " + (res ? "glyphicon-ok" : "glyphicon-remove");
			style = "color: " + (res ? "green" : "red");
		}
	}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<h4>\r\n\t\t<i class=\"");


WebViewPage.WriteTo(@__razor_helper_writer, mark);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" style=\"");


WebViewPage.WriteTo(@__razor_helper_writer, style);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"></i> ");


WebViewPage.WriteTo(@__razor_helper_writer, block.QuestionIndex);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, ". ");


                  WebViewPage.WriteTo(@__razor_helper_writer, block.Text.RenderTex());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t<sup class=\"text-muted\">\r\n");


 			if (blockScore >= 0)
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<span>\r\n\t\t\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, blockScore);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " из ");


WebViewPage.WriteTo(@__razor_helper_writer, block.MaxScore);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " балл");


WebViewPage.WriteTo(@__razor_helper_writer, block.MaxScore == 1 ? "а" : "ов");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t</span>\r\n");


			}
			else
			{
				
WebViewPage.WriteTo(@__razor_helper_writer, block.MaxScore.PluralizeInRussian(new RussianPluralizationOptions
					{
						One = "балл",
						Two = "балла",
						Five = "баллов",
						smallNumbersAreWords = false,
						hideNumberOne = false
					}
				));

     
			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</sup>\r\n\t</h4>\r\n");



	
WebViewPage.WriteTo(@__razor_helper_writer, QuizBlock((dynamic)block, context));

                                    
	if (context.ManualChecking != null)
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<h4>Оцените от 0 до ");


WebViewPage.WriteTo(@__razor_helper_writer, block.MaxScore);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</h4>\r\n");



WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div>\r\n\t\t\t<input type=\"number\" class=\"form-control\" min=\"0\" max=\"");


               WebViewPage.WriteTo(@__razor_helper_writer, block.MaxScore);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" name=\"quiz__score__");


                                                    WebViewPage.WriteTo(@__razor_helper_writer, block.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" />\r\n\t\t</div>\r\n");


	}


WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<hr class=\"quiz-block-delimiter\" />\r\n");



});

}


public static System.Web.WebPages.HelperResult Score(int currentScore, int maxScore)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	
WebViewPage.WriteTo(@__razor_helper_writer, maxScore == 0 ? "" : string.Format("{0}/{1}", currentScore, maxScore));

                                                                         

});

}


public static System.Web.WebPages.HelperResult Block(MdBlock block, BlockRenderContext context, HtmlHelper Html)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	
WebViewPage.WriteTo(@__razor_helper_writer, MvcHtmlString.Create(block.Markdown.RenderMd(context.BaseUrl)));

                                                                

});

}


public static System.Web.WebPages.HelperResult Block(CodeBlock block, BlockRenderContext context, HtmlHelper Html)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<textarea class=\"code code-sample\" data-lang=\"");


    WebViewPage.WriteTo(@__razor_helper_writer, block.LangId);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-ver=\"");


                             WebViewPage.WriteTo(@__razor_helper_writer, block.LangVer);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">");


                                             WebViewPage.WriteTo(@__razor_helper_writer, block.Code);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</textarea>\r\n");



});

}


public static System.Web.WebPages.HelperResult Block(TexBlock block, BlockRenderContext context, HtmlHelper Html)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	foreach (var texLine in block.TexLines)
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"tex\">\\displaystyle ");


WebViewPage.WriteTo(@__razor_helper_writer, texLine.Trim());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n");


	}

});

}


public static System.Web.WebPages.HelperResult Block(YoutubeBlock block, BlockRenderContext context, HtmlHelper Html)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"video-container\">\r\n\t\t<iframe class=\"embedded-video\" width=\"864\" heig" +
"ht=\"480\" src=\"https://www.youtube.com/embed/");


                                                  WebViewPage.WriteTo(@__razor_helper_writer, block.VideoId);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" frameborder=\"0\" allowfullscreen></iframe>\r\n\t</div>\r\n");



WebViewPage.WriteLiteralTo(@__razor_helper_writer, @"	<div>
		<a href=""javascript://"" class=""popover-trigger pull-right""
		   title=""Как ускорить видео?""
		   data-content=""Если по иконке с шестеренкой нет возможности ускорить видео, то вам нужно &lt;a target='blank' href='http://youtube.com/html5'>вручную включить&lt;/a> использование HTML5-плеера.""
		   data-placement=""left"">
			<span class=""glyphicon glyphicon-question-sign""></span>
			Как ускорить видео?
		</a>
	</div>
");



});

}


public static System.Web.WebPages.HelperResult Block(ImageGaleryBlock block, BlockRenderContext context, HtmlHelper Html)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"flexslider\">\r\n\t\t<ul class=\"slides\">\r\n");


 			foreach (var imageUrl in block.ImageUrls)
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<li>\r\n\t\t\t\t\t<img src=\"");


WebViewPage.WriteTo(@__razor_helper_writer, string.Format("{0}/{1}", context.BaseUrl, imageUrl));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" alt=\"");


                               WebViewPage.WriteTo(@__razor_helper_writer, imageUrl);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" />\r\n\t\t\t\t</li>\r\n");


			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</ul>\r\n\t</div>\r\n");



});

}


public static System.Web.WebPages.HelperResult CodeTextArea(string initialCode, string langId, string runSolutionUrl)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<textarea class=\"code code-exercise\" data-lang=\"");


      WebViewPage.WriteTo(@__razor_helper_writer, langId);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">");


               WebViewPage.WriteTo(@__razor_helper_writer, initialCode);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</textarea>\r\n");



WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"solution-control btn-group ctrl-group\">\r\n\t\t<button type=\"button\" cla" +
"ss=\"run-solution-button btn btn-primary no-rounds\" data-url=\"");


                                             WebViewPage.WriteTo(@__razor_helper_writer, runSolutionUrl);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\tRun\r\n\t\t</button>\r\n\t</div>\r\n");



	
WebViewPage.WriteTo(@__razor_helper_writer, RunErrors());

             

});

}


public static System.Web.WebPages.HelperResult Block(ExerciseBlock block, BlockRenderContext context, HtmlHelper Html)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	ExerciseBlockData data = context.GetBlockData(block) ?? new ExerciseBlockData(context.Course.Id, context.Slide.Index);
	var acceptedSolutionUrl = data.Url.Action("AcceptedSolutions", "Course", new { courseId = context.Course.Id, slideIndex = context.Slide.Index });
	var action = data.CanSkip ? "$('#ShowSolutionsAlert').modal('show')" : string.Format("window.location='{0}'", acceptedSolutionUrl);
	var classString = context.IsGuest ? "code-guest" : "code-exercise";
	if (context.ManualChecking != null)
	{
		classString = "code-review";
	}

	var status = "";
	if (data.ReviewState == ExerciseReviewState.WaitingForReview)
	{
		status = "Все тесты пройдены, код ожидает проверки преподавателем";
	}
	else if (data.ReviewState == ExerciseReviewState.Reviewed)
	{
		status = "Все тесты пройдены, код проверен преподаваталем";
		classString = "code-reviewed";
	}
	if (! string.IsNullOrEmpty(status) && context.ManualChecking == null)
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<p class=\"exercise-status\">");


WebViewPage.WriteTo(@__razor_helper_writer, status);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</p>\r\n");


	}

	if (data.ReviewState == ExerciseReviewState.Reviewed || context.ManualChecking != null)
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"exercise__reviews\">\r\n");


 			foreach (var review in data.Reviews.OrderBy(r => r.StartLine))
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<div class=\"exercise__review\"\r\n\t\t\t\t\t data-id=\"");


WebViewPage.WriteTo(@__razor_helper_writer, review.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t\t     data-start-line=\"");


WebViewPage.WriteTo(@__razor_helper_writer, review.StartLine);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t\t     data-start-position=\"");


WebViewPage.WriteTo(@__razor_helper_writer, review.StartPosition);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t\t     data-finish-line=\"");


WebViewPage.WriteTo(@__razor_helper_writer, review.FinishLine);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t\t     data-finish-position=\"");


WebViewPage.WriteTo(@__razor_helper_writer, review.FinishPosition);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t\t\t<div class=\"exercise__review__header\">\r\n\t\t\t\t\t\t<span class=\"author\">");


WebViewPage.WriteTo(@__razor_helper_writer, review.Author.VisibleName);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</span>,\r\n");


 						if (review.StartLine != review.FinishLine)
						{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tстроки ");


WebViewPage.WriteTo(@__razor_helper_writer, review.StartLine + 1);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "&ndash;");


   WebViewPage.WriteTo(@__razor_helper_writer, review.FinishLine + 1);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t\t\t\t</span>\r\n");


						}
						else
						{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tстрока ");


WebViewPage.WriteTo(@__razor_helper_writer, review.StartLine + 1);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t\t\t\t</span>\r\n");


						}


 						if (context.ManualChecking != null)
						{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t<span class=\"close exercise__delete-review\"\r\n\t\t\t\t\t\t\t\t  title=\"Удалить комм" +
"ентарий\"\r\n\t\t\t\t\t\t\t\t  data-id=\"");


WebViewPage.WriteTo(@__razor_helper_writer, review.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t\t\t\t\t\t  data-url=\"");


WebViewPage.WriteTo(@__razor_helper_writer, data.Url.Action("DeleteExerciseCodeReview", "Exercise", new { courseId = context.Course.Id, reviewId = review.Id }));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">&times;</span>\r\n");


						}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"exercise__review__comment\">\r\n\t\t\t\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, Html.Raw(Html.EncodeMultiLineText(review.Comment)));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n");


			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</div>\r\n");


	}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<textarea id=\"secretCodeExercise\" class=\"hide\">");


     WebViewPage.WriteTo(@__razor_helper_writer, block.ExerciseInitialCode.EnsureEnoughLines(4));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</textarea>\r\n");



WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<textarea class=\"code ");


WebViewPage.WriteTo(@__razor_helper_writer, classString);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-lang=\"");


     WebViewPage.WriteTo(@__razor_helper_writer, block.LangId);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">");


                     WebViewPage.WriteTo(@__razor_helper_writer, data.Solution ?? block.ExerciseInitialCode.EnsureEnoughLines(4));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</textarea>\r\n");



WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<script type=\"text/javascript\">\r\n\t\tfunction cleanUserCode() {\r\n\t\t\tvar $secretCod" +
"eExercise = $(\'#secretCodeExercise\');\r\n\t\t\t$(\'.code-exercise\')[0].codeMirrorEdito" +
"r.setValue($secretCodeExercise.text());\r\n\t\t}\r\n\t</script>\r\n");


	if (data.ShowControls && context.ManualChecking == null)
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"solution-control btn-group ctrl-group\">\r\n");


 			if (data.ReviewState == ExerciseReviewState.Reviewed)
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<a href=\"?again=true\" class=\"try-again-button btn btn-primary no-rounds\">\r\n\t\t" +
"\t\t\tTry again\r\n\t\t\t\t</a>\r\n");


			}
			else
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<button type=\"button\" class=\"run-solution-button btn btn-primary no-rounds ");


                                     WebViewPage.WriteTo(@__razor_helper_writer, data.IsLti ? "run-solution-button-lti" : "");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-url=\"");


                                                                                              WebViewPage.WriteTo(@__razor_helper_writer, data.RunSolutionUrl);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t\t\tRun\r\n\t\t\t\t</button>\r\n");


			}


 			if (!data.DebugView)
			{
				var e = ((ExerciseSlide)context.Slide).Exercise.HintsMd;

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<button id=\"GetHintButton\" type=\"button\" class=\"btn btn-default hints-btn\"\r\n\t" +
"\t\t\t        data-course-id=\"");


WebViewPage.WriteTo(@__razor_helper_writer, context.Course.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-slide-index=\"");


                       WebViewPage.WriteTo(@__razor_helper_writer, context.Slide.Index);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-hints-count=\"");


                                                               WebViewPage.WriteTo(@__razor_helper_writer, e.Count);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t\t        data-url=\"");


WebViewPage.WriteTo(@__razor_helper_writer, data.Url.Action("UseHint", "Hint"));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t\t\tGet hint\r\n\t\t\t\t</button>\r\n");


				if (!data.IsLti)
				{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t<button type=\"button\" class=\"btn btn-default giveup-btn\" onclick=\"");


                            WebViewPage.WriteTo(@__razor_helper_writer, action);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t\t\t\tShow solutions\r\n\t\t\t\t\t</button>\r\n");


				}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<button type=\"button\" class=\"btn btn-default reset-btn no-rounds\" onclick=\"cl" +
"eanUserCode()\">\r\n\t\t\t\t\tReset\r\n\t\t\t\t</button>\r\n");


			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</div>\r\n");



		
WebViewPage.WriteTo(@__razor_helper_writer, RunErrors());

              


WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"panel-group ctrl-group\" id=\"hints-accordion\">\r\n\t\t\t<div id=\"hints-pl" +
"ace\"></div>\r\n\t\t</div>\r\n");


		if (!data.IsLti)
		{
			
WebViewPage.WriteTo(@__razor_helper_writer, YouWillLoseScoresDialog(data));

                                 
		}
	}
	if (data.DebugView)
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div>\r\n\t\t\t<h3>Подсказки</h3>\r\n\t\t\t<ol>\r\n");


 				foreach (var hint in block.HintsMd)
				{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t<li>\r\n\t\t\t\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, MvcHtmlString.Create(hint.RenderMd(context.BaseUrl)));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t\t</li>\r\n");


				}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t</ol>\r\n\t\t\t<h3>Комментарий после решения</h3>\r\n\t\t\t<p>");


WebViewPage.WriteTo(@__razor_helper_writer, block.CommentAfterExerciseIsSolved);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</p>\r\n\t\t</div>\r\n");


	}

	if (context.ManualChecking != null)
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"text-muted\">Выделите участок кода, чтобы оставить комментарий</div>" +
"\r\n");




WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"exercise__add-review\" style=\"display: none\" data-url=\"");


                         WebViewPage.WriteTo(@__razor_helper_writer, data.Url.Action("AddExerciseCodeReview", "Exercise", new { courseId = context.Course.Id, checkingId = context.ManualChecking.Id }));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t<div>Добавить комментарий</div>\r\n\t\t\t<textarea class=\"exercise__add-review_" +
"_comment\"></textarea>\r\n\t\t\t<button class=\"exercise__add-review__button btn btn-su" +
"ccess btn-sm\">Сохранить</button>\r\n\t\t</div>\r\n");




WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<form method=\"POST\" action=\"");


WebViewPage.WriteTo(@__razor_helper_writer, data.Url.Action("ScoreExercise", "Exercise"));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t<input type=\"hidden\" name=\"id\" value=\"");


WebViewPage.WriteTo(@__razor_helper_writer, context.ManualChecking.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"/>\r\n\t\t\t<input type=\"hidden\" name=\"errorUrl\" value=\"");


    WebViewPage.WriteTo(@__razor_helper_writer, data.Url.RouteUrl("Course.SlideById", new { courseId = context.Course.Id, slideId = context.Slide.Url, CheckQueueItemId = context.ManualChecking.Id, context.GroupId }));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "&amp;error=\" />\r\n\t\t\t<input type=\"hidden\" name=\"nextUrl\" value=\"");


   WebViewPage.WriteTo(@__razor_helper_writer, data.Url.Action("ManualExerciseCheckingQueue", "Admin", new { courseId = context.Course.Id, context.GroupId }));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"/>\r\n\r\n\t\t\t<h4>Оцените от 0 до ");


WebViewPage.WriteTo(@__razor_helper_writer, block.MaxReviewScore);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</h4>\r\n\t\t\t<div>\r\n\t\t\t\t<input type=\"number\" class=\"form-control\" min=\"0\" max=\"");


                WebViewPage.WriteTo(@__razor_helper_writer, block.MaxReviewScore);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, @""" name=""exerciseScore""/>
			</div>

			<div class=""checkbox checkbox-default"">
				<input data-val=""true"" id=""prohibitFurtherReview"" name=""prohibitFurtherReview"" type=""checkbox"" value=""false"">
				<label for=""prohibitFurtherReview"">
					Не принимать больше код ревью у этого студента
				</label>
			</div>

			<input type=""submit"" class=""btn btn-default"" value=""Сохранить и вернуться"">
			<input type=""submit"" class=""btn btn-primary"" value=""Сохранить и перейти к следующему""
			       data-url=""");


WebViewPage.WriteTo(@__razor_helper_writer, data.Url.Action("CheckNextExerciseForSlide", "Admin", new { courseID = context.Course.Id, slideId = context.Slide.Id, context.GroupId }));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t       onclick=\"$(\'[name=nextUrl]\').val($(this).data(\'url\'))\">\r\n\t\t</form>\r\n" +
"");


	}

});

}


public static System.Web.WebPages.HelperResult QuizBlock(ChoiceBlock block, BlockRenderContext context)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	var items = block.ShuffledItems();
	var isMultiply = block.Multiple;
	var typeInp = isMultiply ? "checkbox" : "radio";
	QuizBlockData model = context.GetBlockData(block) ?? new QuizBlockData(new QuizModel(), 1, QuizState.NotPassed);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"quiz-block-mark ");


WebViewPage.WriteTo(@__razor_helper_writer, typeInp);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " ");


WebViewPage.WriteTo(@__razor_helper_writer, typeInp);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "-default\" id=\'");


                  WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "_quizBlock");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\'>\r\n");


 		for (var itemIndex = 0; itemIndex < items.Length; itemIndex++)
		{
			var item = items[itemIndex];
			var id = isMultiply ? itemIndex + "noMult" : model.BlockIndex.ToString();
			var itemChecked = model.QuizState != QuizState.NotPassed && model.QuizModel.AnswersToQuizes[block.Id].Select(x => x.ItemId).Contains(item.Id);
			var ans = itemChecked ? "checked" : "";
			var itemClass = "";
			var title = "";
			var readonlyAttr = context.CanUserFillQuiz ? "" : "readonly";
			if (model.QuizState == QuizState.Total)
			{
				itemClass = item.IsCorrect ? "right-quiz" : itemChecked ? "wrong-quiz" : "";
				title = (item.IsCorrect ? "Правильный" : "Неправильный") + " вариант";
			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t<div class=\"quiz\">\r\n\t\t\t\t<input ");


WebViewPage.WriteTo(@__razor_helper_writer, ans);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " autocomplete=\"off\" id=\'");


WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock" + item.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\' name=");


                                       WebViewPage.WriteTo(@__razor_helper_writer, "group" + id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " type=\"");


                                                            WebViewPage.WriteTo(@__razor_helper_writer, typeInp);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" ");


                                                                      WebViewPage.WriteTo(@__razor_helper_writer, GetGuestDisable(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " ");


                                                                                                        WebViewPage.WriteTo(@__razor_helper_writer, readonlyAttr);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, ">\r\n\t\t\t\t<label class=\"");


WebViewPage.WriteTo(@__razor_helper_writer, itemClass);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" title=\"");


WebViewPage.WriteTo(@__razor_helper_writer, title);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" for=\"");


        WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock" + item.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" ");


                                            WebViewPage.WriteTo(@__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, ">\r\n\t\t\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, item.Description.RenderTex());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t</label>\r\n");


 				if (model.QuizState == QuizState.Total && model.ShowCorrectAnswer && item.IsCorrect)
				{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t<i class=\"glyphicon glyphicon-ok\" style=\"color: green\" title=\"");


                        WebViewPage.WriteTo(@__razor_helper_writer, title);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"></i>\r\n");


				}


 				if (model.QuizState == QuizState.Total && !string.IsNullOrEmpty(item.Explanation))
				{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t<p class=\"text-muted\">");


WebViewPage.WriteTo(@__razor_helper_writer, item.Explanation);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</p>\r\n");


				}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t</div>\r\n");


		}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t</div>\r\n");



});

}


public static System.Web.WebPages.HelperResult QuizBlock(FillInBlock block, BlockRenderContext context)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	var value = "";
	var quizRes = "";
	QuizBlockData model = context.GetBlockData(block) ?? new QuizBlockData(new QuizModel(), 1, QuizState.NotPassed);
	if (model.QuizState != QuizState.NotPassed && model.QuizModel.AnswersToQuizes[block.Id].FirstOrDefault() != null)
	{
		var answers = model.QuizModel.AnswersToQuizes[block.Id];
		var userAnswer = answers.FirstOrDefault();
		value = userAnswer.Text;
		quizRes = model.QuizState == QuizState.Total
			? (userAnswer.IsRightAnswer ? "right-quiz" : "wrong-quiz") : "";
	}
	var sample = block.Sample;
	var readonlyAttr = context.CanUserFillQuiz ? "" : "readonly";

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"quiz quiz-block-input\">\r\n\t\t<label ");


WebViewPage.WriteTo(@__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, ">\r\n");


 			if (block.Multiline)
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " \t\t\t\t<textarea class=\"form-control ");


WebViewPage.WriteTo(@__razor_helper_writer, quizRes);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" id=\'");


       WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\' maxlength=\"");


                                            WebViewPage.WriteTo(@__razor_helper_writer, QuizController.MAX_FILLINBLOCK_SIZE);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" ");


                                                                                  WebViewPage.WriteTo(@__razor_helper_writer, GetGuestDisable(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " ");


                                                                                                                    WebViewPage.WriteTo(@__razor_helper_writer, readonlyAttr);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " cols=\"70\" rows=\"5\">");


                                                                                                                                                     WebViewPage.WriteTo(@__razor_helper_writer, value);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</textarea>\r\n");


			}
			else
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<input\r\n\t\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\t\tclass=\"form-control ");


WebViewPage.WriteTo(@__razor_helper_writer, quizRes);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t\t\tvalue=\"");


WebViewPage.WriteTo(@__razor_helper_writer, value);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" id=\'");


WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\'\r\n\t\t\t\t\tmaxlength=\"");


WebViewPage.WriteTo(@__razor_helper_writer, QuizController.MAX_FILLINBLOCK_SIZE);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"\r\n\t\t\t\t\tsize=\"68\"\r\n\t\t\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, GetGuestDisable(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, readonlyAttr);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "/>\r\n");


			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</label>\r\n\t</div>\r\n");


	if (model.QuizState == QuizState.Total)
	{
		if (model.ShowCorrectAnswer)
		{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t<div>Правильный ответ: ");


WebViewPage.WriteTo(@__razor_helper_writer, sample);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n");


		}
		if (!string.IsNullOrEmpty(block.Explanation))
		{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t<div class=\"text-muted\">");


WebViewPage.WriteTo(@__razor_helper_writer, block.Explanation);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n");


		}
	}

});

}


public static System.Web.WebPages.HelperResult QuizBlock(IsTrueBlock block, BlockRenderContext context)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	var tchecked = "";
	var fchecked = "";
	var trueItemClass = "";
	var falseItemClass = "";
	var ttitle = "";
	var ftitle = "";
	QuizBlockData model = context.GetBlockData(block) ?? new QuizBlockData(new QuizModel(), 1, QuizState.NotPassed);
	if (model.QuizState != QuizState.NotPassed && model.QuizModel.AnswersToQuizes[block.Id].FirstOrDefault() != null)
	{
		var userAnswer = model.QuizModel.AnswersToQuizes[block.Id].Select(x => x.Text).FirstOrDefault() == "True";
		tchecked = userAnswer ? "checked" : "";
		fchecked = userAnswer ? "" : "checked";
		if (model.QuizState == QuizState.Total)
		{
			trueItemClass = block.Answer ? "right-quiz" : userAnswer ? "wrong-quiz" : "";
			falseItemClass = !block.Answer ? "right-quiz" : !userAnswer ? "wrong-quiz" : "";
		}
	}
	if (model.QuizState == QuizState.Total)
	{
		ttitle = (block.Answer ? "Правильный" : "Неправильный") + " вариант";
		ftitle = (!block.Answer ? "Правильный" : "Неправильный") + " вариант";
	}
	var readonlyAttr = context.CanUserFillQuiz ? "" : "readonly";

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"radio quiz-block-mark\" id=\"");


WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "_quizBlock");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t<div class=\"quiz\">\r\n\t\t\t<input autocomplete=\"off\" ");


WebViewPage.WriteTo(@__razor_helper_writer, tchecked);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " id=\'");


 WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock" + "True");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\' name=\'");


                                           WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "group");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\' type=\"radio\" ");


                                                                              WebViewPage.WriteTo(@__razor_helper_writer, GetGuestDisable(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " ");


                                                                                                                WebViewPage.WriteTo(@__razor_helper_writer, readonlyAttr);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, ">\r\n\t\t\t<label class=\"");


WebViewPage.WriteTo(@__razor_helper_writer, trueItemClass);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" title=\"");


WebViewPage.WriteTo(@__razor_helper_writer, ttitle);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" for=\"");


            WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock" + "True");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" ");


                                               WebViewPage.WriteTo(@__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, ">\r\n\t\t\t\tВерно\r\n\t\t\t</label>\r\n");


 			if (model.QuizState == QuizState.Total && model.ShowCorrectAnswer && block.Answer)
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<i class=\"glyphicon glyphicon-ok\" style=\"color: green\" title=\"");


                       WebViewPage.WriteTo(@__razor_helper_writer, ttitle);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"></i>\r\n");


			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</div>\r\n\t\t<div class=\"quiz\">\r\n\t\t\t<input autocomplete=\"off\" ");


WebViewPage.WriteTo(@__razor_helper_writer, fchecked);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " id=\'");


 WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock" + "False");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\' name=\'");


                                            WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "group");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\' type=\"radio\" ");


                                                                               WebViewPage.WriteTo(@__razor_helper_writer, GetGuestDisable(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, ">\r\n\t\t\t<label class=\"");


WebViewPage.WriteTo(@__razor_helper_writer, falseItemClass);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" title=\"");


WebViewPage.WriteTo(@__razor_helper_writer, ftitle);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" for=\"");


             WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock" + "False");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" ");


                                                 WebViewPage.WriteTo(@__razor_helper_writer, GetGuestOnclick(context.IsGuest));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, ">\r\n\t\t\t\tНеверно\r\n\t\t\t</label>\r\n");


 			if (model.QuizState == QuizState.Total && model.ShowCorrectAnswer && !block.Answer)
			{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<i class=\"glyphicon glyphicon-ok\" style=\"color: green\" title=\"");


                       WebViewPage.WriteTo(@__razor_helper_writer, ftitle);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"></i>\r\n");


			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</div>\r\n\t</div>\r\n");


	if (model.QuizState == QuizState.Total && !string.IsNullOrEmpty(block.Explanation))
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"text-muted\">");


WebViewPage.WriteTo(@__razor_helper_writer, block.Explanation);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n");


	}

});

}


public static System.Web.WebPages.HelperResult QuizBlock(OrderingBlock block, BlockRenderContext context)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	var items = block.ShuffledItems();
	var correctItems = block.Items;
	QuizBlockData model = context.GetBlockData(block) ?? new QuizBlockData(new QuizModel(), 1, QuizState.NotPassed);
	if (model.QuizState != QuizState.NotPassed && model.QuizModel.AnswersToQuizes[block.Id].FirstOrDefault() != null)
	{
		var userAnswers = model.QuizModel.AnswersToQuizes[block.Id].Select(x => x.ItemId).ToList();
		items = items.OrderBy(item => userAnswers.IndexOf(item.GetHash())).ToArray();
	}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"quiz-block-ordering ");


WebViewPage.WriteTo(@__razor_helper_writer, context.CanUserFillQuiz ? "" : "not-movable");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" id=\'");


                                            WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "_quizBlock");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\'>\r\n");


 		if (model.QuizState == QuizState.Total && model.ShowCorrectAnswer)
		{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t<div class=\"quiz-block-ordering__correct-description row\">\r\n\t\t\t\t<div class=\"te" +
"xt-success col-sm-5 col-sm-offset-6\">Правильный ответ</div>\r\n\t\t\t</div>\r\n");


		}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<ul>\r\n");


 			for (var itemIndex = 0; itemIndex < items.Length; itemIndex++)
			{
				var item = items[itemIndex];

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<li class=\"row\">\r\n\t\t\t\t\t<div class=\"quiz quiz-block-ordering__item col-xs-12 c" +
"ol-sm-5\" data-item-id=\"");


                                       WebViewPage.WriteTo(@__razor_helper_writer, item.GetHash());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n");


 						if (context.CanUserFillQuiz)
						{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t<div class=\"quiz-block-ordering__item__icons\">\r\n\t\t\t\t\t\t\t\t<span class=\"glyph" +
"icon glyphicon-arrow-up\"></span>\r\n\t\t\t\t\t\t\t\t<span class=\"glyphicon glyphicon-arrow" +
"-down\"></span>\r\n\t\t\t\t\t\t\t</div>\r\n");


						}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t<input autocomplete=\"off\" id=\'");


WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock" + item.GetHash());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\' type=\"hidden\">\r\n\t\t\t\t\t\t<div class=\"text\">");


WebViewPage.WriteTo(@__razor_helper_writer, item.Text.RenderTex());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n\t\t\t\t\t</div>\r\n");


 					if (model.QuizState == QuizState.Total && model.ShowCorrectAnswer)
					{
						var correctItem = correctItems[itemIndex];

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t<div class=\"quiz-block-ordering__item correct col-xs-12 col-sm-offset-1 col" +
"-sm-5\">\r\n\t\t\t\t\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, correctItem.Text.RenderTex());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t\t\t</div>\r\n");


					}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t</li>\r\n");


			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</ul>\r\n\t</div>\r\n");


	if (model.QuizState == QuizState.Total && !string.IsNullOrEmpty(block.Explanation))
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"text-muted\">");


WebViewPage.WriteTo(@__razor_helper_writer, block.Explanation);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n");


	}

});

}


public static System.Web.WebPages.HelperResult QuizBlock(MatchingBlock block, BlockRenderContext context)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 
	var fixedItems = block.GetMatches(block.ShuffleFixed);
	var movableItems = block.GetMatches(true);

	QuizBlockData model = context.GetBlockData(block) ?? new QuizBlockData(new QuizModel(), 1, QuizState.NotPassed);
	if (model.QuizState != QuizState.NotPassed && model.QuizModel.AnswersToQuizes[block.Id].FirstOrDefault() != null)
	{
		var userAnswers = model.QuizModel.AnswersToQuizes[block.Id];
		fixedItems = block.GetMatches().OrderBy(item => userAnswers.FindIndex(answer => item.GetHashForFixedItem() == answer.ItemId)).ToList();
		movableItems = GetMovableItemsAccordingToUserAnswers(userAnswers, fixedItems);
	}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"quiz-block-matching ");


WebViewPage.WriteTo(@__razor_helper_writer, context.CanUserFillQuiz ? "" : "not-movable");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" id=\'");


                                            WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "_quizBlock");

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\'>\r\n");


 		if (model.QuizState == QuizState.NotPassed)
		{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t<div class=\"quiz-block-matching__description text-muted\">Перетащите элементы и" +
"з правого столбца на свободные места</div>\r\n");


		}


 		if (model.QuizState == QuizState.Total)
		{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t<div class=\"quiz-block-matching__correct-description row\">\r\n\t\t\t\t<div class=\"te" +
"xt-muted col-sm-3 col-sm-offset-3\">Ваш вариант</div>\r\n");


 				if (model.ShowCorrectAnswer)
				{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t<div class=\"text-success col-sm-3 col-sm-offset-1\">Правильный вариант</div>\r" +
"\n");


				}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t</div>\r\n");


		}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<ul>\r\n");


 			for (var itemIndex = 0; itemIndex < fixedItems.Count; itemIndex++)
			{
				var fixedItem = fixedItems[itemIndex];
				var movableItem = movableItems[itemIndex];
				var isRightClass = "";
				if (model.QuizState == QuizState.Total && model.ShowCorrectAnswer)
				{
					isRightClass = fixedItem.Id == movableItem.Id ? "right" : "wrong";
				}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t<li>\r\n\t\t\t\t\t<div class=\"quiz quiz-block-matching__item ");


     WebViewPage.WriteTo(@__razor_helper_writer, isRightClass);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, " row\">\r\n\t\t\t\t\t\t<input autocomplete=\"off\" id=\'");


WebViewPage.WriteTo(@__razor_helper_writer, block.Id + "quizBlock" + fixedItem.GetHashForFixedItem());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\' type=\"hidden\">\r\n\t\t\t\t\t\t<div class=\"quiz-block-matching__fixed-item col-xs-3\" dat" +
"a-item-id=\"");


                               WebViewPage.WriteTo(@__razor_helper_writer, fixedItem.GetHashForFixedItem());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">");


                                                                 WebViewPage.WriteTo(@__razor_helper_writer, fixedItem.FixedItem.RenderTex());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n");


 						if (model.QuizState == QuizState.NotPassed)
						{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t<div class=\"quiz-block-matching__droppable col-xs-3\" data-block-id=\"");


                                WebViewPage.WriteTo(@__razor_helper_writer, block.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-item-id=\"");


                                                         WebViewPage.WriteTo(@__razor_helper_writer, fixedItem.GetHashForFixedItem());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\"></div>\r\n");



WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t<div class=\"quiz-block-matching__source__droppable col-xs-3 col-sm-offset-" +
"1 added\" data-block-id=\"");


                                                              WebViewPage.WriteTo(@__razor_helper_writer, block.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-movable-item-id=\"");


                                                                                               WebViewPage.WriteTo(@__razor_helper_writer, movableItem.GetHashForMovableItem());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t\t\t\t\t\t<div class=\"quiz-block-matching__movable-item\" data-block-id=\"");


                           WebViewPage.WriteTo(@__razor_helper_writer, block.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-item-id=\"");


                                                    WebViewPage.WriteTo(@__razor_helper_writer, movableItem.GetHashForMovableItem());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">");


                                                                                          WebViewPage.WriteTo(@__razor_helper_writer, movableItem.MovableItem.RenderTex());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n\t\t\t\t\t\t\t</div>\r\n");


						}
						else
						{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t<div class=\"quiz-block-matching__droppable col-xs-3 added\" data-block-id=\"" +
"");


                                      WebViewPage.WriteTo(@__razor_helper_writer, block.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-item-id=\"");


                                                               WebViewPage.WriteTo(@__razor_helper_writer, fixedItem.GetHashForFixedItem());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-movable-item-id=\"");


                                                                                                                       WebViewPage.WriteTo(@__razor_helper_writer, movableItem.GetHashForMovableItem());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t\t\t\t\t\t<div class=\"quiz-block-matching__movable-item\" data-block-id=\"");


                           WebViewPage.WriteTo(@__razor_helper_writer, block.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\" data-item-id=\"");


                                                    WebViewPage.WriteTo(@__razor_helper_writer, movableItem.GetHashForMovableItem());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">");


                                                                                          WebViewPage.WriteTo(@__razor_helper_writer, movableItem.MovableItem.RenderTex());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n\t\t\t\t\t\t\t</div>\r\n");


							if (model.QuizState == QuizState.Total && model.ShowCorrectAnswer)
							{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t\t<div class=\"quiz-block-matching__fixed-item correct col-xs-3 col-sm-offse" +
"t-1\">\r\n\t\t\t\t\t\t\t\t\t");


WebViewPage.WriteTo(@__razor_helper_writer, fixedItem.MovableItem.RenderTex());

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\r\n\t\t\t\t\t\t\t\t</div>\r\n");


							}
							if (context.CanUserFillQuiz)
							{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\t\t<div class=\"quiz-block-matching__source__droppable col-xs-3 col-sm-offset" +
"-1\" data-block-id=\"");


                                                         WebViewPage.WriteTo(@__razor_helper_writer, block.Id);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">\r\n\t\t\t\t\t\t\t\t</div>\r\n");


							}
						}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n");


			}

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t</ul>\r\n\t</div>\r\n");


	if (model.QuizState == QuizState.Total && !string.IsNullOrEmpty(block.Explanation))
	{

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t\t<div class=\"text-muted\">");


WebViewPage.WriteTo(@__razor_helper_writer, block.Explanation);

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "</div>\r\n");


	}

});

}


public static System.Web.WebPages.HelperResult RunErrors()
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"run-result run-service-error\">\r\n\t\t<div class=\"run-verdict label-warn" +
"ing\">Ошибка сервера :(</div>\r\n\t\t<pre class=\"no-rounds\"><code class=\"run-details\"" +
"></code></pre>\r\n\t</div>\r\n");




WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"run-result run-compile-error\">\r\n\t\t<div class=\"run-verdict label-dang" +
"er\">Ошибка компиляции</div>\r\n\t\t<pre class=\"no-rounds\"><code class=\"run-details\">" +
"</code></pre>\r\n\t</div>\r\n");




WebViewPage.WriteLiteralTo(@__razor_helper_writer, @"	<div class=""run-result run-style-error"">
		<div class=""run-verdict label-danger"">Нарушение стилевых требований</div>
		<pre class=""no-rounds""><code class=""run-details""></code></pre>
		<div>
			<small>В некоторых ситуациях стилевые проверки тут могут быть жестче, чем необходимо в реальной жизни.</small>
		</div>
	</div>
");




WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"run-result run-wa\">\r\n\t\t<div class=\"run-verdict label-danger\">Неверны" +
"й результат</div>\r\n\t\t<div class=\"diff-table tablesorter\"></div>\r\n\t</div>\r\n");




WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\t<div class=\"run-result run-wa-no-diff\">\r\n\t\t<div class=\"run-verdict label-danger\"" +
">Неверный результат</div>\r\n\t\t<pre class=\"no-rounds\"><code class=\"run-details\"></" +
"code></pre>\r\n\t</div>\r\n");




WebViewPage.WriteLiteralTo(@__razor_helper_writer, @"	<div class=""run-result run-success"">
		<div class=""run-verdict label-success clearfix"">Успех!</div>
		<div class=""run-review-status label-info clearfix"">Ваше решение отправлено на проверку преподавателю</div>
		<pre class=""no-rounds""><code class=""run-details""></code></pre>
	</div>
");



});

}


public static System.Web.WebPages.HelperResult YouWillLoseScoresDialog(ExerciseBlockData data)
{
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {


 

WebViewPage.WriteLiteralTo(@__razor_helper_writer, @"	<div class=""modal fade"" id=""ShowSolutionsAlert"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
		<div class=""modal-dialog"">
			<div class=""modal-content"">
				<div class=""modal-header"">
					<button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
						<span aria-hidden=""true"">&times;</span>
					</button>
					<h4 class=""modal-title"">Внимание</h4>
				</div>
				<div class=""modal-body"">
					<p>Вы потеряете возможность получить баллы за эту задачу, если продолжите.</p>
				</div>
				<div class=""modal-footer"">
					<a class=""btn btn-default"" href=""");


WebViewPage.WriteTo(@__razor_helper_writer, data.Url.Action("AcceptedSolutions", "Course", new { data.CourseId, data.SlideIndex }));

WebViewPage.WriteLiteralTo(@__razor_helper_writer, "\">Продолжить</a>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" data-dismiss" +
"=\"modal\">Отмена</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n");



});

}


	private static string GetGuestOnclick(bool isGuest)
	{
		return isGuest ? "onclick=loginForContinue()" : "";
	}

	private static string GetGuestDisable(bool isGuest)
	{
		return isGuest ? "disabled" : null;
	}

	private static List<MatchingMatch> GetMovableItemsAccordingToUserAnswers(List<UserQuiz> userAnswers, List<MatchingMatch> fixedItems)
	{
		var movableItems = new List<MatchingMatch>();
		foreach (var fixedItem in fixedItems)
		{
			var userAnswer = userAnswers.FirstOrDefault(answer => answer.ItemId == fixedItem.GetHashForFixedItem());
			if (userAnswer == null)
				continue;
			movableItems.Add(fixedItems.FirstOrDefault(item => item.GetHashForMovableItem() == userAnswer.Text));
		}
		return movableItems;
	}


    }
}
#pragma warning restore 1591
