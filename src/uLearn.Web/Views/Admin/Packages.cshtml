@using uLearn.Web.Extensions
@using Ulearn.Common.Extensions
@using GitCourseUpdater
@model uLearn.Web.Controllers.PackagesViewModel

@{
	ViewBag.Title = "Экспорт и импорт курса";
}

<div class="container">
	<h1>Экспорт и импорт курса</h1>

	@if (Model.HasPackage)
	{
		<div style="margin-bottom: 10px">
			Текущая версия загружена <b title="@Model.LastUpdate.ToPrettyString()">@Model.LastUpdate.ToAgoPrettyString()</b>

			@Html.ActionLink("Скачать опубликованную версию", "DownloadPackage", new { Model.CourseId }, new { @class = "btn btn-xs btn-primary", style = "margin-left: 10px" })
			@Html.ActionLink("Скопировать курс на Степик", "ExportCourse", "Stepik", new { courseId = Model.CourseId }, new { @class = "btn btn-xs btn-warning" })
		</div>
	}

    @if (! string.IsNullOrEmpty(Model.Error))
    {
	    <div class="course-loading-error">
            <p class="text-danger">
                <b>Ошибка в&nbsp;архиве:</b> @Html.Raw(Model.Error.EscapeHtml().LineEndingsToBrTags())
            </p>
            <p class="text-muted">
                Непонятно, что произошло? Напишите нам на&nbsp;<a href="mailto:support@ulearn.me">support@ulearn.me</a>.
            </p>
        </div>
    }
    @using (Html.BeginForm("UploadCourse", "Admin", new { Model.CourseId }, FormMethod.Post, new { enctype = "multipart/form-data", style = "margin-bottom: 10px" }))
	{
		<input type="file" data-filename-placement="inside" class="btn" name="file" title="Выбрать архив с курсом" />
		<input type="submit" class="btn btn-success" value="Загрузить"/>
	}
	@using (Html.BeginForm("UploadCourseWithGit", "Admin", new { Model.CourseId }, FormMethod.Post, new { @class = "form-inline" }))
	{
		@Html.AntiForgeryToken()
		<input type="text" class="form-control" name="repoUrl" value="@(Model.PublishedVersion.RepoUrl)" placeholder="@("git@*.git")"/>
		<input type="text" class="form-control" name="commitHashOrBranchName" value="master" placeholder="Ветка или hash"/>
		<input type="submit" class="btn btn-success" value="загрузить"/>
	}

	@if (Model.Versions.Count > 0)
	{
		<h1>Загруженные версии</h1>
		<div class="courses-versions">
			@Html.AntiForgeryToken()
			@foreach (var version in Model.Versions)
			{
				var isCurrentVersion = Model.PublishedVersion != null && version.Id == Model.PublishedVersion.Id;
				<a href="@Url.Action("Diagnostics", new { Model.CourseId, versionId = version.Id })" class="no-underline @(isCurrentVersion ? "current" : "")">
					<div class="courses-versions__version @(isCurrentVersion ? "current" : "")">
						@if (isCurrentVersion)
						{
							<span class="glyphicon glyphicon-ok" title="Текущая версия"></span>
						}
						<div class="courses-versions__author">
							<b>@version.Author.VisibleName</b>
							загрузил(а)
						</div>
						<div class="courses-versions__time">
							<b title="@version.LoadingTime.ToPrettyString()">@version.LoadingTime.ToAgoPrettyString()</b>
						</div>

						<div class="courses-versions__actions">
							@if (version.RepoUrl != null && version.CommitHash != null) {
								<a href="@GitUtils.RepoUrlToBrowserLink(version.RepoUrl, version.CommitHash)" target="_blank">
									<span class="glyphicon glyphicon-list-alt"></span>
								</a>
							}
							<a href="@Url.Action("DownloadVersion", new { Model.CourseId, versionId = version.Id })">
								<span class="glyphicon glyphicon-download-alt"></span>
							</a>
							@if (!isCurrentVersion)
							{
								using (Html.BeginForm("DeleteVersion", "Admin", new { Model.CourseId, versionId = version.Id }, FormMethod.Post))
								{
									@Html.Hidden("__RequestVerificationToken")
									<input type="submit" class="btn btn-xs btn-danger" value="&times;" title="Удалить"/>
								}
							}
						</div>
					</div>
				</a>
			}
		</div>
	}
</div>