@using Database.Extensions
@using Database.Models
@using Microsoft.AspNet.Identity
@using uLearn.Web.Extensions
@using uLearn.Web.Views.Shared

@model uLearn.Web.Controllers.GroupAccessViewModel

<div class="group__access media">
	<div class="pull-left">
		@UserAvatar.Avatar(Model.Access.User)
	</div>
	<div class="media-body">
		@if (Model.CanBeRevoked)
		{
			<div class="pull-right">
				<a href="@Url.Action("RevokeAccessFromGroup", "Admin", new { groupId = Model.Access.GroupId, userId = Model.Access.UserId })" class="group__access__revoke-link" title="Забрать доступ">&times;</a>
			</div>
		}

        <div title="@Model.Access.User.UserName">
            @if (User.HasSystemAccess(SystemAccessType.ViewAllProfiles) || User.IsSystemAdministrator())
            {
	            @Html.ActionLink(Model.Access.User.VisibleName, "Profile", "Account", new { userId = Model.Access.User.Id }, new {})
            }
            else
            {
	            @Model.Access.User.VisibleName
            }
        </div>
		<div class="group__access__role help-block">
			@if (Model.Access.AccessType == GroupAccessType.Owner)
			{
				<text>Владелец</text>
			}
			else
			{
				<text>Полный доступ предоставлен @Model.Access.GrantedBy.VisibleName <span title="@Model.Access.GrantTime.ToPrettyString()">@Model.Access.GrantTime.ToAgoPrettyString()</span></text>
			}
		</div>
		<div>
			@{
				var courseId = Model.Access.Group.CourseId;

				var iAmGroupOwner = Model.Access.Group.OwnerId == User.Identity.GetUserId();
				var canChangeOwner = iAmGroupOwner || User.HasAccessFor(courseId, CourseRole.CourseAdmin);
			}
			@if (canChangeOwner && Model.Access.AccessType != GroupAccessType.Owner)
			{
				<form action="@Url.Action("ChangeGroupOwnerApi")" onsubmit="return false;">
					@Html.AntiForgeryToken()
					@Html.Hidden("courseId", courseId)
					@Html.Hidden("groupId", Model.Access.GroupId)
					@Html.Hidden("newOwnerId", Model.Access.UserId)
					<a href="#" class="group__access__change-owner-link">Сделать владельцем</a>
				</form>
			}
		</div>

	</div>
</div>
