@using uLearn.Web.Extensions
@using Ulearn.Core.Courses.Slides.Exercises
@using Ulearn.Core.Extensions
@model uLearn.Web.Controllers.UserUnitStatisticsPageModel

@{
	ViewBag.Title = Model.User.VisibleName + ", " + Model.Unit.Title;
}

<div class="container">
	<h2>@Model.User.VisibleName, «@Model.Unit.Title»</h2>
	<div class="user-submissions">
		@{
			var shownAnySubmission = false;
		}
		@foreach (var submission in Model.Submissions)
		{
			var slide = (ExerciseSlide)Model.Slides[submission.SlideId];
			var block = slide.Exercise;
			var manualScore = -1;
			if (!slide.Scoring.RequireReview)
			{
				continue;
			}
			shownAnySubmission = true;
			<div class="user-submission">
				<div class="user-submission__info">
					<h3 class="title">
						@slide.Title.TruncateWithEllipsis(30) (<span class="total-score">@Model.Scores[slide.Id]</span> из @slide.MaxScore)
					</h3>
					<div class="date">
						Сдана <span title="@submission.Timestamp.ToPrettyString(true)">@submission.Timestamp.ToAgoPrettyString(true)</span>,
						<a href="@Url.Action("UserSolutions", "Analytics", new { courseId = submission.CourseId, slideId = slide.Id, userId = submission.UserId })" target="_blank">
							<span class="hidden-xs-inline">смотреть</span> код
						</a>
					</div>
					<div class="hint">смахните вправо для оценки &rarr;</div>
				</div>

				<form method="POST" action="@Url.Action("SimpleScoreExercise", "Exercise")" class="exercise__simple-score-form">
					<input type="hidden" name="submissionId" value="@submission.Id"/>

					<p>
						Код-ревью
						@if (submission.ManualCheckings.Any(c => c.IsChecked))
						{
							manualScore = submission.ManualCheckings.Max(c => c.Score);
							<span>(текущая оценка: @manualScore из @slide.Scoring.CodeReviewScore):</span>
						}
						else
						{
							<span> (максимальный балл @slide.Scoring.CodeReviewScore):</span>
						}
					</p>
					<div class="exercise__score">
						<input type="hidden" name="exerciseScore"/>
						<div class="btn-group" role="group">
							@foreach (var scorePercent in new[] { 0, 25, 50, 75, 100 })
							{
								var score = slide.Scoring.CodeReviewScore * scorePercent / 100;
								var isActive = slide.Scoring.CodeReviewScore > 4 && score == manualScore ? "active" : "";
								var isDisabled = score < manualScore ? "disabled" : "";
								<button type="button"
										class="btn btn-default @isActive @isDisabled"
										data-value="@score">
									@scorePercent%
								</button>
							}
						</div>
						<div class="status"></div>
					</div>
				</form>

				@{
					var lastManualChecking = submission.ManualCheckings.LastOrDefault(c => c.IsChecked);
					var solution = submission.SolutionCode.Text;
				}
				@if (lastManualChecking != null && lastManualChecking.NotDeletedReviews.Any())
				{
					<div class="last-review-comments">
						<div>
							<strong>Комментари@(lastManualChecking.NotDeletedReviews.Count > 1 ? "и" : "й") последнего код-ревью:</strong>
						</div>

						@foreach (var review in lastManualChecking.NotDeletedReviews)
						{
							var startPosition = solution.FindPositionByLineAndCharacter(review.StartLine, review.StartPosition);
							var finishPosition = solution.FindPositionByLineAndCharacter(review.FinishLine, review.FinishPosition);
							<div>
								<span class="commented-code">@solution.Substring(startPosition, finishPosition - startPosition).TruncateWithEllipsis(30)</span>
								@review.Comment
							</div>
						}
					</div>
				}
			</div>
		}
		@if (!shownAnySubmission)
		{
			<div class="text-muted">
				Нет сданных задач, требующих код-ревью
			</div>
		}
	</div>
</div>