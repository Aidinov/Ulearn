@using uLearn
@using uLearn.Quizes

@model UnitStatisticPageModel
@{
	ViewBag.Title = "Статистика и успеваемость";
}

@helper UsersByCountVisitedSlidesTable(string id, Dictionary<int, int> data)
{
	<table id="@id" class="hidden">
		<thead>
			<tr>
				<th>Просмотренных слайдов</th>
				<th>Количество человек</th>
			</tr>
		</thead>
		<tbody>
			@for (var countVisitedSlides = 0; countVisitedSlides <= Model.Slides.Count; countVisitedSlides++)
			{
				<tr>
					<td>@countVisitedSlides</td>
					<td>@data.GetOrDefault(countVisitedSlides, 0)</td>
				</tr>
			}
		</tbody>
	</table>
}

<body>
	<div class="container">

		<h1>Статистика</h1>

		<div class="analytics__dashboard">
			@using (Html.BeginForm("UnitStatistics", "Analytics", FormMethod.Get, new { @class="form-inline", id="unit-statistics-filter-form" }))
			{
				@Html.Hidden("courseId", Model.CourseId)

				<div class="form-group">
						@Html.DropDownList("unitName",
							Model.UnitsNames.Select(name => new SelectListItem { Text = name, Selected = name == Model.UnitName, Value = name }),
							new { @class = "form-control" })
				</div>

				<div class="form-group ml10">
					с @Html.TextBox("periodStart", Model.PeriodStart.ToString("dd.MM.yyyy"), new { @class = "form-control form-control-date datetimepicker" })
				</div>

				<div class="form-group">
					по @Html.TextBox("periodFinish", Model.PeriodFinish.ToString("dd.MM.yyyy"), new { @class = "form-control form-control-date datetimepicker" })
				</div>

				<div class="form-group">
					@{
						var groupsListItems = new List<SelectListItem> { new SelectListItem { Text = "Все пользователи", Value = "", Selected = !Model.GroupId.HasValue } };
						groupsListItems.AddRange(
							Model.Groups.Select(group => new SelectListItem { Text = group.Name, Value = group.Id.ToString(), Selected = group.Id == Model.GroupId })
							);
					}
					@Html.DropDownList("group", groupsListItems, new { @class = "form-control" })
				</div>

				<div class="form-group">
					<button role="button" class="btn btn-primary">Отфильтровать</button>
				</div>
			}

			<div class="row">
				<div class="col-xs-12 col-md-6">
					<h2>Слайды</h2>
					<div class="small-table__title">
						<span class="navbar-label navbar-label-link glyphicon glyphicon-none"></span>
						<span class="small-table__title__cell">слайд</span>
						<div class="pull-right">
							<span class="stat-title small-table__title__cell">просмотры</span>
							<span class="stat-title small-table__title__cell"></span>
						</div>
					</div>
					@foreach (var slide in Model.Slides)
					{
						<div>
							@if (slide is QuizSlide)
							{
								<span class="navbar-label navbar-label-link glyphicon glyphicon-pushpin"></span>
							}
							else if (slide is ExerciseSlide)
							{
								<span class="navbar-label navbar-label-link glyphicon glyphicon-edit"></span>
							}
							else
							{
								<span class="navbar-label navbar-label-link glyphicon glyphicon-none"></span>
							}

							@Html.RouteLink(slide.Title.TruncateWithEllipsis(35), "Course.SlideById", new { Model.CourseId, SlideId = slide.Url }, new { })
							<div class="pull-right">
								<span class="slide-visits-count">
									@Model.SlidesVisits.GetOrDefault(slide.Id, new List<Visit>()).Count
								</span>

								@if (slide is QuizSlide)
								{
									var average = Model.QuizzesAverageScore[slide.Id];
									if (average < 0)
									{
										<span class="quiz-average">&ndash;</span>
									}
									else
									{
										<span class="quiz-average" title="Средний процент полученных баллов">@average%</span>
									}
								}
								else if (slide is ExerciseSlide)
								{
									var tries = Model.ExercisesSolutionsCount.GetOrDefault(slide.Id, 0);
									var acceptedTries = Model.ExercisesAcceptedSolutionsCount.GetOrDefault(slide.Id, 0);
									var acceptedPercent = acceptedTries * 100 / tries;
									if (tries == 0)
									{
										<span class="exercise-tries" title="Нет попыток">&ndash;</span>
									}
									else
									{
										<span class="exercise-tries" title="Успешных попыток: @acceptedTries/@tries">@acceptedPercent%</span>
									}
								}
								else
								{
									<span class="lesson-slide-no-stat"></span>
								}
							</div>
						</div>
					}
				</div>

				<div class="col-xs-12 col-md-6">
					<h2>Посетители</h2>
					<div>
						Посмотрели весь модуль за выбранный период: <strong>@Model.UsersVisitedAllSlidesInPeriodCount</strong>
					</div>
					<div>
						Всего посмотрели весь модуль к @Model.PeriodFinish.ToDatePrettyString(true):
						<strong>
							@(Model.UsersVisitedAllSlidesBeforePeriodFinishedCount - Model.UsersVisitedAllSlidesBeforePeriodCount)
						</strong>
					</div>

					<div class="vspace-20"></div>

					@{
						var usersByCountVisitedSlides = Model.VisitedSlidesCountByUser
							.GroupBy(p => p.Value, p => p.Key)
							.ToDictionary(g => g.Key, g => g.Count());
						var usersByCountVisitedSlidesAllTime = Model.VisitedSlidesCountByUserAllTime
							.GroupBy(p => p.Value, p => p.Key)
							.ToDictionary(g => g.Key, g => g.Count());
					}
					@UsersByCountVisitedSlidesTable("usersByCountVisitedSlides", usersByCountVisitedSlides)
					@UsersByCountVisitedSlidesTable("usersByCountVisitedSlidesAllTime", usersByCountVisitedSlidesAllTime)

					<div class="analytics__chart__toggles">
						Показать график:
						<a href="#usersByCountVisitedSlides" class="analytics__chart__toggle internal-page-link active">за выбранный период</a>
						<a href="#usersByCountVisitedSlidesAllTime" class="analytics__chart__toggle internal-page-link">за всё время</a>
					</div>

					<div id="usersByCountVisitedSlidesChart"></div>
				</div>
			</div>
	
			<div class="vspace-20 hidden-xs hidden-sm"></div>

			<div class="row">
				<div class="col-xs-12">
					<h2>Прогресс</h2>

					@{
						var exercisesAndQuizzes = Model.Slides.Where(s => s is QuizSlide || s is ExerciseSlide).OrderBy(s => s.Index);
					}

					<div class="small-table__title">
						<div class="small-table__title__cell">пользователь</div>
						<div class="pull-right">
							<div class="small-table__title__cell">прогресс</div>
							@foreach (var slide in exercisesAndQuizzes)
							{
								if (slide is QuizSlide)
								{
									<span class="glyphicon glyphicon-pushpin small-table__title__cell" title="@slide.Title"></span>
								}
								else if (slide is ExerciseSlide)
								{
									<span class="glyphicon glyphicon-edit small-table__title__cell" title="@slide.Title"></span>
								}
							}
						</div>
					</div>

					@foreach (var userInfo in Model.VisitedUsers)
					{
						var visitedSlidesCount = Model.VisitedSlidesCountByUser[userInfo.UserId];
						var visitedSlidesCountAllTime = Model.VisitedSlidesCountByUserAllTime[userInfo.UserId];
						var userVisibleName = userInfo.UserVisibleName != "" ? userInfo.UserVisibleName : userInfo.UserName;
						<div>
							<div class="ib" title="@userInfo.UserName">@userVisibleName.TruncateWithEllipsis(25)</div>
							<div class="ib pull-right">
								<div class="student-progress progress">
									<div class="progress-bar progress-bar-warning"
									     style="width: @(100 * (visitedSlidesCountAllTime - visitedSlidesCount) / Model.Slides.Count)%"
										 title="Посмотрел(а) @((visitedSlidesCountAllTime - visitedSlidesCount).PluralizeInRussian(new RussianPluralizationOptions
									                         {
										                         One = "слайд",
										                         Two = "слайда",
										                         Five = "слайдов",
										                         Gender = Gender.Male
									                         })) вне указанного период"></div>
									<div class="progress-bar progress-bar-success"
									     style="width: @(100 * visitedSlidesCount / Model.Slides.Count)%"
									     title="Посмотрел(а) @visitedSlidesCount.PluralizeInRussian(new RussianPluralizationOptions
									                         {
										                         One = "слайд",
										                         Two = "слайда",
										                         Five = "слайдов",
										                         Gender = Gender.Male
									                         }) в указанный период">
									</div>
								</div>

								@foreach (var exerciseOrQuiz in exercisesAndQuizzes)
								{
									var visit = Model.SlidesVisits.GetOrDefault(exerciseOrQuiz.Id, new List<Visit>()).FirstOrDefault(v => v.UserId == userInfo.UserId);
									if (visit != null && visit.IsPassed)
									{
										<span class="small-table__right-cell" title="@visit.Timestamp.ToPrettyString()">@visit.Score</span>
									}
									else
									{
										<span class="small-table__right-cell">&nbsp;</span>
									}
								}
							</div>
						</div>
					}
				</div>
				
			</div>
		</div>
	</div>
</body>

@section scripts{
<script src="//code.highcharts.com/highcharts.js"></script>
<script src="//code.highcharts.com/modules/data.js"></script>
<script src="~/Scripts/analytics-highcharts.js"></script>
}
