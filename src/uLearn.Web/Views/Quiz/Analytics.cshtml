@using uLearn.Model.Blocks
@using uLearn.Quizes
@model QuizAnalyticsModel

@functions {
	private static int GetColSpan(SlideBlock block)
	{
		if (block is ChoiceBlock)
			return ((ChoiceBlock)block).Items.Length;
		return 1;
	}

	private string GetSubstring(string text, int length)
	{
		var substring = text.Substring(0, Math.Min(length, text.Length));
		if (substring.Length < text.Length)
			substring += "...";
		return substring;
	}

}
<div>
	@{ var maxQuestionIndex = Model.QuizSlide.Blocks.OfType<AbstractQuestionBlock>().OrderBy(x => x.QuestionIndex).Max(x => x.QuestionIndex);}
	<table id="myTable" class="tablesorter">
		<thead>
			<tr>
				<th style="border-bottom: none" title="при наведении на шапку таблицы, можно прочитать условие задания и вариант ответа" data-sorter="true">наведи на меня!</th>
				<th style="border-bottom: none">Группа</th>
				<th style="border-bottom: none" data-sorter="false"></th>
				@foreach (var block in Model.QuizSlide.Blocks.OfType<AbstractQuestionBlock>().OrderBy(x => x.QuestionIndex))
				{
					int count;
					Model.RightAnswersCount.TryGetValue(block.QuestionIndex.ToString(), out count);
					<th title="@block.Text" colspan="@GetColSpan(block)">@block.Text (@count/@Model.UserAnswers.Count)</th>
					if (maxQuestionIndex == block.QuestionIndex)
					{
						break;
					}
					<th style="border-bottom: none" data-sorter="false"></th>
				}
			</tr>
			<tr>
				<th style="border-top: none" title="при наведении на шапку таблицы, можно прочитать условие задания и вариант ответа"></th>
				<th style="border-top: none"></th>
				<th style="border-top: none; border-bottom: none" data-sorter="false"></th>
				@foreach (var block in Model.QuizSlide.Blocks.OfType<AbstractQuestionBlock>().OrderBy(x => x.QuestionIndex))
				{
					if (block is ChoiceBlock)
					{
						var choiseBlock = ((ChoiceBlock)block);
						foreach (var item in choiseBlock.Items.OrderBy(x => x.Id))
						{
							<th title="@item.Description">@GetSubstring(item.Description, 40)</th>
						}
					}
					else if (block is FillInBlock)
					{
						<th>user answer</th>
					}
					else
					{
						<th>IsRight</th>
					}
					if (maxQuestionIndex == block.QuestionIndex)
					{
						break;
					}
					<th style="border-top: none;border-bottom: none" data-sorter="false"></th>
				}
			</tr>
		</thead>
		<tbody>
			@foreach (var user in Model.UserAnswers.Keys)
			{
				var group = Model.Group[user];
				<tr>
					<td>@user</td>
					<td data-sort-value="@(String.IsNullOrEmpty(group) ? "-" : group)">@group</td>
					<td style="border-top: none; border-bottom: none"></td>
					@foreach (var ans in Model.UserAnswers[user])
					{
						if (ans is FillInBlockAnswerInfo)
						{
							var answer = ((FillInBlockAnswerInfo)ans);
							var fillClass = answer.IsRight ? "rightQuizAnswer" : "falseQuizAnswer";
							<td class="@fillClass">@(answer.Answer)</td>
						}
						else if (ans is IsTrueBlockAnswerInfo)
						{
							var answer = ((IsTrueBlockAnswerInfo)ans);
							<td class="@(answer.IsRight ? "rightQuizAnswer" : "falseQuizAnswer")" data-sort-value="@answer.Answer"><i class="@(answer.Answer ? "glyphicon glyphicon-ok" : "")"></i></td>
						}
						else if (ans is OrderingBlockAnswerInfo)
						{
							var answer = (OrderingBlockAnswerInfo)ans;
							<td class="@(answer.IsRight ? "rightQuizAnswer" : "falseQuizAnswer")"></td>
						}
						else if (ans is MatchingBlockAnswerInfo)
						{
							var answer = (MatchingBlockAnswerInfo)ans;
							<td class="@(answer.IsRight ? "rightQuizAnswer" : "falseQuizAnswer")"></td>
						}
						else
						{
							var answer = ((ChoiceBlockAnswerInfo)ans);
							foreach (var item in answer.AnswersId)
							{
								var isContain = answer.RealyRightAnswer.Contains(item.Key);
								var classForCell = ((isContain && item.Value) || (!isContain && !item.Value)) ? "rightQuizAnswer" : "falseQuizAnswer";
								var itemClass = item.Value ? "glyphicon glyphicon-ok" : "";
								<td class="@classForCell" data-sort-value="@item.Value"><i class="@itemClass"></i></td>
							}
						}
						if (maxQuestionIndex == int.Parse(ans.Id))
						{
							break;
						}
						<td style="border-top: none; border-bottom: none"></td>
					}
				</tr>
			}
		</tbody>
	</table>
</div>
<script src="~/tablesorter-master/js/jquery.tablesorter.js"></script>
<script src="~/tablesorter-master/js/jquery.tablesorter.widgets.min.js"></script>
<script src="~/Scripts/table-configurator.js"></script>
